name: macOS

on: [push, pull_request]

jobs:
  build:
    name: AppleClang-${{matrix.build_type}}-${{matrix.lib}}-${{matrix.components}}
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: true
      matrix:
        build_type: [Release, Debug]
        lib: [shared, static]
        components: [minimal, lgpl, gpl]

    steps:
    - uses: actions/checkout@v2

    - name: Setup Ninja
      uses: ashutoshvarma/setup-ninja@master
      with:
        version: 1.10.0

    - name: Cache CMake
      id: cache-cmake
      uses: actions/cache@v2
      with:
        path: cmake-3.22.0-macos-universal
        key: ${{ runner.os }}-cmake-3.22.0

    - name: Download CMake
      if: steps.cache-cmake.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/Kitware/CMake/releases/download/v3.22.0/cmake-3.22.0-macos-universal.tar.gz
        tar xvf cmake-3.22.0-macos-universal.tar.gz

    - name: Setup CMake
      run: |
        echo $(pwd)/cmake-3.22.0-macos-universal/CMake.app/Contents/bin >> $GITHUB_PATH

    - name: Setup Environment
      if: ${{matrix.build_type == 'Release'}}
      run: |
        echo 'CFLAGS=-flto' >> $GITHUB_ENV
        echo 'CXXFLAGS=-flto' >> $GITHUB_ENV

    - name: Configure
      run: |
        cmake -S . -B build_${{matrix.build_type}}/ \
              -DBUILD_SHARED_LIBS=${{matrix.lib == 'shared'}} \
              -DCMAKE_INSTALL_PREFIX:PATH=./install \
              -DWITH_GPL=${{matrix.components == 'gpl'}} \
              -DWITH_LGPL=${{contains(matrix.components, 'gpl')}} \
              -G Ninja

    - name: Build
      run: |
        cmake --build build_${{matrix.build_type}}/ \
              --config ${{matrix.build_type}}

    - name: Install
      run: |
        cmake --build build_${{matrix.build_type}}/ \
              --config ${{matrix.build_type}} \
              --target install
