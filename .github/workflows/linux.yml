name: Linux

on: [push, pull_request]

jobs:
  build:
    name: GCC-${{matrix.build_type}}-${{matrix.lib}}-${{matrix.components}}-${{matrix.gpu}}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: true
      matrix:
        build_type: [Release, Debug]
        lib: [shared, static]
        components: [minimal, lgpl, gpl]
        gpu: [no-cuda, cuda]

    steps:
    - uses: actions/checkout@v2

    - name: Setup Dependencies
      run: |
        sudo apt-get update
        DEBIAN_FRONTEND=noninteractive sudo apt-get install -y \
          build-essential \
          cmake \
          gfortran \
          libblas-dev \
          liblapack-dev \
          libmetis-dev \
          libomp-dev \
          libtbb-dev \
          ninja-build \
          nvidia-cuda-toolkit

    # Due to a mismatch in LTO version used by GCC and CUDA compiler, enable
    # -flto only when building the non-CUDA version of the library.
    - name: Setup Environment
      if: ${{matrix.build_type == 'Release' && matrix.gpu != 'cuda'}}
      run: |
        echo 'CFLAGS=-flto' >> $GITHUB_ENV
        echo 'CXXFLAGS=-flto' >> $GITHUB_ENV

    - name: Configure
      run: |
        cmake -S . -B build_${{matrix.build_type}}/ \
              -DBUILD_SHARED_LIBS=${{matrix.lib == 'shared'}} \
              -DCMAKE_INSTALL_PREFIX:PATH=./install \
              -DWITH_CUDA=${{matrix.gpu == 'cuda'}} \
              -DWITH_GPL=${{matrix.components == 'gpl'}} \
              -DWITH_LGPL=${{contains(matrix.components, 'gpl')}} \
              -G Ninja

    - name: Build
      run: |
        cmake --build build_${{matrix.build_type}}/ \
              --config ${{matrix.build_type}}

    - name: Install
      run: |
        cmake --build build_${{matrix.build_type}}/ \
              --config ${{matrix.build_type}} \
              --target install
