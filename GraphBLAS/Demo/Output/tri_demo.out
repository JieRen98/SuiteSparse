--------------------------------------------------------------
Wathen: nx 4 ny 4 n 65 nz 752 method 0, time: 0.001 sec

total time to read A matrix:       0.000781 sec

n 65 # edges 376
U=triu(A) time:        0.000069 sec
L=tril(A) time:        0.000031 sec

------------------------------------- dot product method:
# triangles 872
L*U' time (dot):         0.000076 sec
tricount time:         0.000115 sec (dot product method)
tri+prep time:         0.000214 sec (incl time to compute L and U)
compute C time:        0.000076 sec
reduce (C) time:       0.000038 sec
rate       1.75 million edges/sec (incl time for U=triu(A))
rate       3.28 million edges/sec (just tricount itself)
L*U' time (dot):         0.000037 sec (nthreads: 2 speedup 2.05718)
tricount time:         0.000052 sec (dot product method)
tri+prep time:         0.000152 sec (incl time to compute L and U)
compute C time:        0.000037 sec
reduce (C) time:       0.000015 sec
rate       2.47 million edges/sec (incl time for U=triu(A))
rate       7.19 million edges/sec (just tricount itself)
L*U' time (dot):         0.000032 sec (nthreads: 4 speedup 2.35925)
tricount time:         0.000046 sec (dot product method)
tri+prep time:         0.000146 sec (incl time to compute L and U)
compute C time:        0.000032 sec
reduce (C) time:       0.000014 sec
rate       2.58 million edges/sec (incl time for U=triu(A))
rate       8.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.000032 sec (nthreads: 8 speedup 2.38705)
tricount time:         0.000046 sec (dot product method)
tri+prep time:         0.000146 sec (incl time to compute L and U)
compute C time:        0.000032 sec
reduce (C) time:       0.000014 sec
rate       2.58 million edges/sec (incl time for U=triu(A))
rate       8.20 million edges/sec (just tricount itself)
L*U' time (dot):         0.000031 sec (nthreads: 16 speedup 2.42413)
tricount time:         0.000045 sec (dot product method)
tri+prep time:         0.000145 sec (incl time to compute L and U)
compute C time:        0.000031 sec
reduce (C) time:       0.000013 sec
rate       2.60 million edges/sec (incl time for U=triu(A))
rate       8.43 million edges/sec (just tricount itself)
L*U' time (dot):         0.000031 sec (nthreads: 32 speedup 2.46572)
tricount time:         0.000044 sec (dot product method)
tri+prep time:         0.000144 sec (incl time to compute L and U)
compute C time:        0.000031 sec
reduce (C) time:       0.000013 sec
rate       2.61 million edges/sec (incl time for U=triu(A))
rate       8.48 million edges/sec (just tricount itself)
L*U' time (dot):         0.000044 sec
tricount time:         0.000059 sec (dot product method)
tri+prep time:         0.000159 sec (incl time to compute L and U)
compute C time:        0.000044 sec
reduce (C) time:       0.000015 sec
rate       2.37 million edges/sec (incl time for U=triu(A))
rate       6.40 million edges/sec (just tricount itself)
L*U' time (dot):         0.000034 sec (nthreads: 2 speedup 1.29542)
tricount time:         0.000048 sec (dot product method)
tri+prep time:         0.000147 sec (incl time to compute L and U)
compute C time:        0.000034 sec
reduce (C) time:       0.000014 sec
rate       2.55 million edges/sec (incl time for U=triu(A))
rate       7.90 million edges/sec (just tricount itself)
L*U' time (dot):         0.000032 sec (nthreads: 4 speedup 1.37174)
tricount time:         0.000045 sec (dot product method)
tri+prep time:         0.000145 sec (incl time to compute L and U)
compute C time:        0.000032 sec
reduce (C) time:       0.000013 sec
rate       2.59 million edges/sec (incl time for U=triu(A))
rate       8.30 million edges/sec (just tricount itself)
L*U' time (dot):         0.000033 sec (nthreads: 8 speedup 1.33492)
tricount time:         0.000046 sec (dot product method)
tri+prep time:         0.000146 sec (incl time to compute L and U)
compute C time:        0.000033 sec
reduce (C) time:       0.000013 sec
rate       2.58 million edges/sec (incl time for U=triu(A))
rate       8.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.000032 sec (nthreads: 16 speedup 1.3672)
tricount time:         0.000045 sec (dot product method)
tri+prep time:         0.000145 sec (incl time to compute L and U)
compute C time:        0.000032 sec
reduce (C) time:       0.000013 sec
rate       2.59 million edges/sec (incl time for U=triu(A))
rate       8.27 million edges/sec (just tricount itself)
L*U' time (dot):         0.000034 sec (nthreads: 32 speedup 1.28516)
tricount time:         0.000048 sec (dot product method)
tri+prep time:         0.000148 sec (incl time to compute L and U)
compute C time:        0.000034 sec
reduce (C) time:       0.000014 sec
rate       2.54 million edges/sec (incl time for U=triu(A))
rate       7.84 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000051 sec
tricount time:         0.000055 sec (saxpy method)
tri+prep time:         0.000086 sec (incl time to compute L)
compute C time:        0.000051 sec
reduce (C) time:       0.000004 sec
rate       4.36 million edges/sec (incl time for L=tril(A))
rate       6.78 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000026 sec (nthreads: 2 speedup 1.98067)
tricount time:         0.000030 sec (saxpy method)
tri+prep time:         0.000060 sec (incl time to compute L)
compute C time:        0.000026 sec
reduce (C) time:       0.000004 sec
rate       6.22 million edges/sec (incl time for L=tril(A))
rate      12.66 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000022 sec (nthreads: 4 speedup 2.35482)
tricount time:         0.000026 sec (saxpy method)
tri+prep time:         0.000056 sec (incl time to compute L)
compute C time:        0.000022 sec
reduce (C) time:       0.000004 sec
rate       6.68 million edges/sec (incl time for L=tril(A))
rate      14.71 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000021 sec (nthreads: 8 speedup 2.45174)
tricount time:         0.000025 sec (saxpy method)
tri+prep time:         0.000055 sec (incl time to compute L)
compute C time:        0.000021 sec
reduce (C) time:       0.000004 sec
rate       6.79 million edges/sec (incl time for L=tril(A))
rate      15.25 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000020 sec (nthreads: 16 speedup 2.51236)
tricount time:         0.000024 sec (saxpy method)
tri+prep time:         0.000055 sec (incl time to compute L)
compute C time:        0.000020 sec
reduce (C) time:       0.000004 sec
rate       6.85 million edges/sec (incl time for L=tril(A))
rate      15.58 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000020 sec (nthreads: 32 speedup 2.54103)
tricount time:         0.000024 sec (saxpy method)
tri+prep time:         0.000055 sec (incl time to compute L)
compute C time:        0.000020 sec
reduce (C) time:       0.000004 sec
rate       6.88 million edges/sec (incl time for L=tril(A))
rate      15.73 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 5 by 5, nz: 18, method 1 time 0.000 sec

total time to read A matrix:       0.000227 sec

n 5 # edges 9
U=triu(A) time:        0.000069 sec
L=tril(A) time:        0.000023 sec

------------------------------------- dot product method:
# triangles 7
L*U' time (dot):         0.000039 sec
tricount time:         0.000068 sec (dot product method)
tri+prep time:         0.000161 sec (incl time to compute L and U)
compute C time:        0.000039 sec
reduce (C) time:       0.000030 sec
rate       0.06 million edges/sec (incl time for U=triu(A))
rate       0.13 million edges/sec (just tricount itself)
L*U' time (dot):         0.000013 sec (nthreads: 2 speedup 2.96188)
tricount time:         0.000022 sec (dot product method)
tri+prep time:         0.000115 sec (incl time to compute L and U)
compute C time:        0.000013 sec
reduce (C) time:       0.000009 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.41 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 4 speedup 3.95451)
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000111 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000008 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.50 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 8 speedup 4.06088)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000110 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000008 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.52 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 16 speedup 3.98864)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000110 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000008 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.52 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 32 speedup 4.15204)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000109 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000007 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.54 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000112 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000009 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.46 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 2 speedup 1.11159)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000110 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000008 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.53 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 4 speedup 1.14139)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000110 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000008 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.53 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 8 speedup 1.1352)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000110 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000008 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.53 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 16 speedup 1.17036)
tricount time:         0.000016 sec (dot product method)
tri+prep time:         0.000109 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000007 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.55 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec (nthreads: 32 speedup 0.903981)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000112 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000008 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.46 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000083 sec
tricount time:         0.000084 sec (saxpy method)
tri+prep time:         0.000107 sec (incl time to compute L)
compute C time:        0.000083 sec
reduce (C) time:       0.000001 sec
rate       0.08 million edges/sec (incl time for L=tril(A))
rate       0.11 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000035 sec (nthreads: 2 speedup 2.36573)
tricount time:         0.000036 sec (saxpy method)
tri+prep time:         0.000059 sec (incl time to compute L)
compute C time:        0.000035 sec
reduce (C) time:       0.000001 sec
rate       0.15 million edges/sec (incl time for L=tril(A))
rate       0.25 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000038 sec (nthreads: 4 speedup 2.17449)
tricount time:         0.000039 sec (saxpy method)
tri+prep time:         0.000062 sec (incl time to compute L)
compute C time:        0.000038 sec
reduce (C) time:       0.000001 sec
rate       0.14 million edges/sec (incl time for L=tril(A))
rate       0.23 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000046 sec (nthreads: 8 speedup 1.79437)
tricount time:         0.000047 sec (saxpy method)
tri+prep time:         0.000070 sec (incl time to compute L)
compute C time:        0.000046 sec
reduce (C) time:       0.000001 sec
rate       0.13 million edges/sec (incl time for L=tril(A))
rate       0.19 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000074 sec (nthreads: 16 speedup 1.12451)
tricount time:         0.000075 sec (saxpy method)
tri+prep time:         0.000098 sec (incl time to compute L)
compute C time:        0.000074 sec
reduce (C) time:       0.000001 sec
rate       0.09 million edges/sec (incl time for L=tril(A))
rate       0.12 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000210 sec (nthreads: 32 speedup 0.393857)
tricount time:         0.000212 sec (saxpy method)
tri+prep time:         0.000235 sec (incl time to compute L)
compute C time:        0.000210 sec
reduce (C) time:       0.000001 sec
rate       0.04 million edges/sec (incl time for L=tril(A))
rate       0.04 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 3 by 3, 0 entries, from stdin

total time to read A matrix:       0.000494 sec

n 3 # edges 0
U=triu(A) time:        0.000065 sec
L=tril(A) time:        0.000060 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000037 sec
tricount time:         0.000041 sec (dot product method)
tri+prep time:         0.000166 sec (incl time to compute L and U)
compute C time:        0.000037 sec
reduce (C) time:       0.000004 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000011 sec (nthreads: 2 speedup 3.26355)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000137 sec (incl time to compute L and U)
compute C time:        0.000011 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 4 speedup 3.99644)
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000135 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 8 speedup 4.35695)
tricount time:         0.000009 sec (dot product method)
tri+prep time:         0.000134 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 16 speedup 8.56816)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000130 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 32 speedup 9.1579)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000129 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000130 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 2 speedup 1.12559)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000129 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 4 speedup 1.06175)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000129 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 8 speedup 1.13744)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000129 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 16 speedup 0.911892)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000130 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 32 speedup 0.849426)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000131 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000032 sec
tricount time:         0.000032 sec (saxpy method)
tri+prep time:         0.000093 sec (incl time to compute L)
compute C time:        0.000032 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000007 sec (nthreads: 2 speedup 4.83128)
tricount time:         0.000007 sec (saxpy method)
tri+prep time:         0.000067 sec (incl time to compute L)
compute C time:        0.000007 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000005 sec (nthreads: 4 speedup 6.37424)
tricount time:         0.000005 sec (saxpy method)
tri+prep time:         0.000065 sec (incl time to compute L)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000005 sec (nthreads: 8 speedup 6.72478)
tricount time:         0.000005 sec (saxpy method)
tri+prep time:         0.000065 sec (incl time to compute L)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000005 sec (nthreads: 16 speedup 6.33389)
tricount time:         0.000005 sec (saxpy method)
tri+prep time:         0.000065 sec (incl time to compute L)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000005 sec (nthreads: 32 speedup 6.6533)
tricount time:         0.000005 sec (saxpy method)
tri+prep time:         0.000065 sec (incl time to compute L)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 4 by 4, 4 entries, from stdin

total time to read A matrix:       0.000469 sec

n 4 # edges 2
U=triu(A) time:        0.000110 sec
L=tril(A) time:        0.000023 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000036 sec
tricount time:         0.000069 sec (dot product method)
tri+prep time:         0.000203 sec (incl time to compute L and U)
compute C time:        0.000036 sec
reduce (C) time:       0.000033 sec
rate       0.01 million edges/sec (incl time for U=triu(A))
rate       0.03 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec (nthreads: 2 speedup 3.0776)
tricount time:         0.000025 sec (dot product method)
tri+prep time:         0.000159 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000013 sec
rate       0.01 million edges/sec (incl time for U=triu(A))
rate       0.08 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 4 speedup 3.86328)
tricount time:         0.000021 sec (dot product method)
tri+prep time:         0.000155 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000012 sec
rate       0.01 million edges/sec (incl time for U=triu(A))
rate       0.10 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 8 speedup 3.93326)
tricount time:         0.000021 sec (dot product method)
tri+prep time:         0.000155 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000012 sec
rate       0.01 million edges/sec (incl time for U=triu(A))
rate       0.10 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 16 speedup 4.02226)
tricount time:         0.000021 sec (dot product method)
tri+prep time:         0.000154 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000012 sec
rate       0.01 million edges/sec (incl time for U=triu(A))
rate       0.10 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 32 speedup 4.02593)
tricount time:         0.000020 sec (dot product method)
tri+prep time:         0.000154 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000011 sec
rate       0.01 million edges/sec (incl time for U=triu(A))
rate       0.10 million edges/sec (just tricount itself)
L*U' time (dot):         0.000011 sec
tricount time:         0.000024 sec (dot product method)
tri+prep time:         0.000158 sec (incl time to compute L and U)
compute C time:        0.000011 sec
reduce (C) time:       0.000013 sec
rate       0.01 million edges/sec (incl time for U=triu(A))
rate       0.08 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 2 speedup 1.18349)
tricount time:         0.000021 sec (dot product method)
tri+prep time:         0.000155 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000012 sec
rate       0.01 million edges/sec (incl time for U=triu(A))
rate       0.09 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 4 speedup 1.19032)
tricount time:         0.000021 sec (dot product method)
tri+prep time:         0.000155 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000011 sec
rate       0.01 million edges/sec (incl time for U=triu(A))
rate       0.10 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 8 speedup 1.28583)
tricount time:         0.000020 sec (dot product method)
tri+prep time:         0.000154 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000011 sec
rate       0.01 million edges/sec (incl time for U=triu(A))
rate       0.10 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 16 speedup 1.2805)
tricount time:         0.000020 sec (dot product method)
tri+prep time:         0.000154 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000011 sec
rate       0.01 million edges/sec (incl time for U=triu(A))
rate       0.10 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec (nthreads: 32 speedup 0.951587)
tricount time:         0.000024 sec (dot product method)
tri+prep time:         0.000158 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000012 sec
rate       0.01 million edges/sec (incl time for U=triu(A))
rate       0.08 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000078 sec
tricount time:         0.000080 sec (saxpy method)
tri+prep time:         0.000103 sec (incl time to compute L)
compute C time:        0.000078 sec
reduce (C) time:       0.000001 sec
rate       0.02 million edges/sec (incl time for L=tril(A))
rate       0.03 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000045 sec (nthreads: 2 speedup 1.7373)
tricount time:         0.000046 sec (saxpy method)
tri+prep time:         0.000070 sec (incl time to compute L)
compute C time:        0.000045 sec
reduce (C) time:       0.000001 sec
rate       0.03 million edges/sec (incl time for L=tril(A))
rate       0.04 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000044 sec (nthreads: 4 speedup 1.78566)
tricount time:         0.000045 sec (saxpy method)
tri+prep time:         0.000068 sec (incl time to compute L)
compute C time:        0.000044 sec
reduce (C) time:       0.000001 sec
rate       0.03 million edges/sec (incl time for L=tril(A))
rate       0.04 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000064 sec (nthreads: 8 speedup 1.21826)
tricount time:         0.000065 sec (saxpy method)
tri+prep time:         0.000089 sec (incl time to compute L)
compute C time:        0.000064 sec
reduce (C) time:       0.000001 sec
rate       0.02 million edges/sec (incl time for L=tril(A))
rate       0.03 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000096 sec (nthreads: 16 speedup 0.812331)
tricount time:         0.000097 sec (saxpy method)
tri+prep time:         0.000121 sec (incl time to compute L)
compute C time:        0.000096 sec
reduce (C) time:       0.000001 sec
rate       0.02 million edges/sec (incl time for L=tril(A))
rate       0.02 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000175 sec (nthreads: 32 speedup 0.446016)
tricount time:         0.000177 sec (saxpy method)
tri+prep time:         0.000200 sec (incl time to compute L)
compute C time:        0.000175 sec
reduce (C) time:       0.000001 sec
rate       0.01 million edges/sec (incl time for L=tril(A))
rate       0.01 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 4 by 4, 10 entries, from stdin

total time to read A matrix:       0.000276 sec

n 4 # edges 5
U=triu(A) time:        0.000032 sec
L=tril(A) time:        0.000011 sec

------------------------------------- dot product method:
# triangles 2
L*U' time (dot):         0.000019 sec
tricount time:         0.000074 sec (dot product method)
tri+prep time:         0.000118 sec (incl time to compute L and U)
compute C time:        0.000019 sec
reduce (C) time:       0.000055 sec
rate       0.04 million edges/sec (incl time for U=triu(A))
rate       0.07 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 2 speedup 2.57759)
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000055 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000004 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.44 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 4 speedup 3.97088)
tricount time:         0.000008 sec (dot product method)
tri+prep time:         0.000052 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000004 sec
rate       0.10 million edges/sec (incl time for U=triu(A))
rate       0.60 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 8 speedup 4.4361)
tricount time:         0.000008 sec (dot product method)
tri+prep time:         0.000051 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000003 sec
rate       0.10 million edges/sec (incl time for U=triu(A))
rate       0.65 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 16 speedup 4.46366)
tricount time:         0.000008 sec (dot product method)
tri+prep time:         0.000051 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000003 sec
rate       0.10 million edges/sec (incl time for U=triu(A))
rate       0.65 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 32 speedup 3.79627)
tricount time:         0.000008 sec (dot product method)
tri+prep time:         0.000052 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000003 sec
rate       0.10 million edges/sec (incl time for U=triu(A))
rate       0.60 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec
tricount time:         0.000009 sec (dot product method)
tri+prep time:         0.000052 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000004 sec
rate       0.10 million edges/sec (incl time for U=triu(A))
rate       0.57 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 2 speedup 1.15362)
tricount time:         0.000008 sec (dot product method)
tri+prep time:         0.000051 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000003 sec
rate       0.10 million edges/sec (incl time for U=triu(A))
rate       0.64 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 4 speedup 1.1235)
tricount time:         0.000008 sec (dot product method)
tri+prep time:         0.000051 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000003 sec
rate       0.10 million edges/sec (incl time for U=triu(A))
rate       0.64 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 8 speedup 1.17186)
tricount time:         0.000008 sec (dot product method)
tri+prep time:         0.000051 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000003 sec
rate       0.10 million edges/sec (incl time for U=triu(A))
rate       0.66 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 16 speedup 1.11724)
tricount time:         0.000008 sec (dot product method)
tri+prep time:         0.000051 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000003 sec
rate       0.10 million edges/sec (incl time for U=triu(A))
rate       0.63 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 32 speedup 0.875096)
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000053 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000004 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.52 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000042 sec
tricount time:         0.000042 sec (saxpy method)
tri+prep time:         0.000054 sec (incl time to compute L)
compute C time:        0.000042 sec
reduce (C) time:       0.000001 sec
rate       0.09 million edges/sec (incl time for L=tril(A))
rate       0.12 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000016 sec (nthreads: 2 speedup 2.62628)
tricount time:         0.000016 sec (saxpy method)
tri+prep time:         0.000028 sec (incl time to compute L)
compute C time:        0.000016 sec
reduce (C) time:       0.000000 sec
rate       0.18 million edges/sec (incl time for L=tril(A))
rate       0.31 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000017 sec (nthreads: 4 speedup 2.51981)
tricount time:         0.000017 sec (saxpy method)
tri+prep time:         0.000028 sec (incl time to compute L)
compute C time:        0.000017 sec
reduce (C) time:       0.000000 sec
rate       0.18 million edges/sec (incl time for L=tril(A))
rate       0.29 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000023 sec (nthreads: 8 speedup 1.79777)
tricount time:         0.000024 sec (saxpy method)
tri+prep time:         0.000035 sec (incl time to compute L)
compute C time:        0.000023 sec
reduce (C) time:       0.000000 sec
rate       0.14 million edges/sec (incl time for L=tril(A))
rate       0.21 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000035 sec (nthreads: 16 speedup 1.19239)
tricount time:         0.000035 sec (saxpy method)
tri+prep time:         0.000047 sec (incl time to compute L)
compute C time:        0.000035 sec
reduce (C) time:       0.000000 sec
rate       0.11 million edges/sec (incl time for L=tril(A))
rate       0.14 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000062 sec (nthreads: 32 speedup 0.676284)
tricount time:         0.000062 sec (saxpy method)
tri+prep time:         0.000074 sec (incl time to compute L)
compute C time:        0.000062 sec
reduce (C) time:       0.000001 sec
rate       0.07 million edges/sec (incl time for L=tril(A))
rate       0.08 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 7 by 7, 16 entries, from stdin

total time to read A matrix:       0.000460 sec

n 7 # edges 8
U=triu(A) time:        0.000028 sec
L=tril(A) time:        0.000011 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000016 sec
tricount time:         0.000032 sec (dot product method)
tri+prep time:         0.000071 sec (incl time to compute L and U)
compute C time:        0.000016 sec
reduce (C) time:       0.000016 sec
rate       0.11 million edges/sec (incl time for U=triu(A))
rate       0.25 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 2 speedup 2.53277)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000052 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000007 sec
rate       0.16 million edges/sec (incl time for U=triu(A))
rate       0.63 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 4 speedup 3.07408)
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000050 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000006 sec
rate       0.16 million edges/sec (incl time for U=triu(A))
rate       0.72 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 8 speedup 3.46949)
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000049 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000006 sec
rate       0.16 million edges/sec (incl time for U=triu(A))
rate       0.76 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 16 speedup 3.61295)
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000049 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000006 sec
rate       0.16 million edges/sec (incl time for U=triu(A))
rate       0.79 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 32 speedup 3.7105)
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000048 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000005 sec
rate       0.16 million edges/sec (incl time for U=triu(A))
rate       0.82 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000049 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000006 sec
rate       0.16 million edges/sec (incl time for U=triu(A))
rate       0.75 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 2 speedup 1.04826)
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000049 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000006 sec
rate       0.16 million edges/sec (incl time for U=triu(A))
rate       0.78 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 4 speedup 1.11248)
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000049 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000006 sec
rate       0.16 million edges/sec (incl time for U=triu(A))
rate       0.80 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 8 speedup 1.11425)
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000049 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000006 sec
rate       0.16 million edges/sec (incl time for U=triu(A))
rate       0.79 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 16 speedup 1.14716)
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000049 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000006 sec
rate       0.16 million edges/sec (incl time for U=triu(A))
rate       0.81 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 32 speedup 0.775863)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000051 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000006 sec
rate       0.16 million edges/sec (incl time for U=triu(A))
rate       0.65 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000024 sec
tricount time:         0.000025 sec (saxpy method)
tri+prep time:         0.000036 sec (incl time to compute L)
compute C time:        0.000024 sec
reduce (C) time:       0.000001 sec
rate       0.22 million edges/sec (incl time for L=tril(A))
rate       0.32 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000018 sec (nthreads: 2 speedup 1.35603)
tricount time:         0.000018 sec (saxpy method)
tri+prep time:         0.000029 sec (incl time to compute L)
compute C time:        0.000018 sec
reduce (C) time:       0.000000 sec
rate       0.27 million edges/sec (incl time for L=tril(A))
rate       0.43 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000018 sec (nthreads: 4 speedup 1.36013)
tricount time:         0.000018 sec (saxpy method)
tri+prep time:         0.000029 sec (incl time to compute L)
compute C time:        0.000018 sec
reduce (C) time:       0.000000 sec
rate       0.27 million edges/sec (incl time for L=tril(A))
rate       0.44 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000024 sec (nthreads: 8 speedup 1.02044)
tricount time:         0.000024 sec (saxpy method)
tri+prep time:         0.000035 sec (incl time to compute L)
compute C time:        0.000024 sec
reduce (C) time:       0.000000 sec
rate       0.23 million edges/sec (incl time for L=tril(A))
rate       0.33 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000035 sec (nthreads: 16 speedup 0.693543)
tricount time:         0.000036 sec (saxpy method)
tri+prep time:         0.000047 sec (incl time to compute L)
compute C time:        0.000035 sec
reduce (C) time:       0.000000 sec
rate       0.17 million edges/sec (incl time for L=tril(A))
rate       0.22 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000057 sec (nthreads: 32 speedup 0.43115)
tricount time:         0.000057 sec (saxpy method)
tri+prep time:         0.000068 sec (incl time to compute L)
compute C time:        0.000057 sec
reduce (C) time:       0.000001 sec
rate       0.12 million edges/sec (incl time for L=tril(A))
rate       0.14 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 304 by 304, 876 entries, from stdin

total time to read A matrix:       0.000746 sec

n 304 # edges 438
U=triu(A) time:        0.000033 sec
L=tril(A) time:        0.000015 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000026 sec
tricount time:         0.000048 sec (dot product method)
tri+prep time:         0.000097 sec (incl time to compute L and U)
compute C time:        0.000026 sec
reduce (C) time:       0.000022 sec
rate       4.53 million edges/sec (incl time for U=triu(A))
rate       9.14 million edges/sec (just tricount itself)
L*U' time (dot):         0.000016 sec (nthreads: 2 speedup 1.58962)
tricount time:         0.000028 sec (dot product method)
tri+prep time:         0.000076 sec (incl time to compute L and U)
compute C time:        0.000016 sec
reduce (C) time:       0.000011 sec
rate       5.73 million edges/sec (incl time for U=triu(A))
rate      15.87 million edges/sec (just tricount itself)
L*U' time (dot):         0.000014 sec (nthreads: 4 speedup 1.82526)
tricount time:         0.000024 sec (dot product method)
tri+prep time:         0.000073 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000010 sec
rate       5.98 million edges/sec (incl time for U=triu(A))
rate      17.97 million edges/sec (just tricount itself)
L*U' time (dot):         0.000014 sec (nthreads: 8 speedup 1.8724)
tricount time:         0.000024 sec (dot product method)
tri+prep time:         0.000073 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000010 sec
rate       6.01 million edges/sec (incl time for U=triu(A))
rate      18.23 million edges/sec (just tricount itself)
L*U' time (dot):         0.000014 sec (nthreads: 16 speedup 1.89276)
tricount time:         0.000023 sec (dot product method)
tri+prep time:         0.000072 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000010 sec
rate       6.06 million edges/sec (incl time for U=triu(A))
rate      18.69 million edges/sec (just tricount itself)
L*U' time (dot):         0.000014 sec (nthreads: 32 speedup 1.89218)
tricount time:         0.000023 sec (dot product method)
tri+prep time:         0.000072 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000010 sec
rate       6.07 million edges/sec (incl time for U=triu(A))
rate      18.79 million edges/sec (just tricount itself)
L*U' time (dot):         0.000014 sec
tricount time:         0.000023 sec (dot product method)
tri+prep time:         0.000072 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000009 sec
rate       6.10 million edges/sec (incl time for U=triu(A))
rate      19.09 million edges/sec (just tricount itself)
L*U' time (dot):         0.000013 sec (nthreads: 2 speedup 1.03769)
tricount time:         0.000022 sec (dot product method)
tri+prep time:         0.000071 sec (incl time to compute L and U)
compute C time:        0.000013 sec
reduce (C) time:       0.000009 sec
rate       6.18 million edges/sec (incl time for U=triu(A))
rate      19.91 million edges/sec (just tricount itself)
L*U' time (dot):         0.000013 sec (nthreads: 4 speedup 1.04903)
tricount time:         0.000022 sec (dot product method)
tri+prep time:         0.000071 sec (incl time to compute L and U)
compute C time:        0.000013 sec
reduce (C) time:       0.000009 sec
rate       6.19 million edges/sec (incl time for U=triu(A))
rate      20.02 million edges/sec (just tricount itself)
L*U' time (dot):         0.000013 sec (nthreads: 8 speedup 1.02099)
tricount time:         0.000022 sec (dot product method)
tri+prep time:         0.000071 sec (incl time to compute L and U)
compute C time:        0.000013 sec
reduce (C) time:       0.000009 sec
rate       6.17 million edges/sec (incl time for U=triu(A))
rate      19.76 million edges/sec (just tricount itself)
L*U' time (dot):         0.000013 sec (nthreads: 16 speedup 1.04879)
tricount time:         0.000022 sec (dot product method)
tri+prep time:         0.000071 sec (incl time to compute L and U)
compute C time:        0.000013 sec
reduce (C) time:       0.000009 sec
rate       6.20 million edges/sec (incl time for U=triu(A))
rate      20.07 million edges/sec (just tricount itself)
L*U' time (dot):         0.000014 sec (nthreads: 32 speedup 0.951763)
tricount time:         0.000024 sec (dot product method)
tri+prep time:         0.000073 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000009 sec
rate       6.02 million edges/sec (incl time for U=triu(A))
rate      18.36 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000037 sec
tricount time:         0.000038 sec (saxpy method)
tri+prep time:         0.000053 sec (incl time to compute L)
compute C time:        0.000037 sec
reduce (C) time:       0.000001 sec
rate       8.26 million edges/sec (incl time for L=tril(A))
rate      11.63 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000030 sec (nthreads: 2 speedup 1.22817)
tricount time:         0.000031 sec (saxpy method)
tri+prep time:         0.000046 sec (incl time to compute L)
compute C time:        0.000030 sec
reduce (C) time:       0.000001 sec
rate       9.51 million edges/sec (incl time for L=tril(A))
rate      14.29 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000031 sec (nthreads: 4 speedup 1.20926)
tricount time:         0.000031 sec (saxpy method)
tri+prep time:         0.000047 sec (incl time to compute L)
compute C time:        0.000031 sec
reduce (C) time:       0.000001 sec
rate       9.41 million edges/sec (incl time for L=tril(A))
rate      14.06 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000036 sec (nthreads: 8 speedup 1.02152)
tricount time:         0.000037 sec (saxpy method)
tri+prep time:         0.000052 sec (incl time to compute L)
compute C time:        0.000036 sec
reduce (C) time:       0.000001 sec
rate       8.40 million edges/sec (incl time for L=tril(A))
rate      11.91 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000047 sec (nthreads: 16 speedup 0.781655)
tricount time:         0.000048 sec (saxpy method)
tri+prep time:         0.000063 sec (incl time to compute L)
compute C time:        0.000047 sec
reduce (C) time:       0.000001 sec
rate       6.93 million edges/sec (incl time for L=tril(A))
rate       9.16 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000072 sec (nthreads: 32 speedup 0.514651)
tricount time:         0.000072 sec (saxpy method)
tri+prep time:         0.000088 sec (incl time to compute L)
compute C time:        0.000072 sec
reduce (C) time:       0.000001 sec
rate       4.98 million edges/sec (incl time for L=tril(A))
rate       6.04 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 48 by 48, 352 entries, from stdin

total time to read A matrix:       0.000803 sec

n 48 # edges 176
U=triu(A) time:        0.000065 sec
L=tril(A) time:        0.000026 sec

------------------------------------- dot product method:
# triangles 160
L*U' time (dot):         0.000049 sec
tricount time:         0.000081 sec (dot product method)
tri+prep time:         0.000173 sec (incl time to compute L and U)
compute C time:        0.000049 sec
reduce (C) time:       0.000032 sec
rate       1.02 million edges/sec (incl time for U=triu(A))
rate       2.17 million edges/sec (just tricount itself)
L*U' time (dot):         0.000027 sec (nthreads: 2 speedup 1.80287)
tricount time:         0.000039 sec (dot product method)
tri+prep time:         0.000131 sec (incl time to compute L and U)
compute C time:        0.000027 sec
reduce (C) time:       0.000012 sec
rate       1.35 million edges/sec (incl time for U=triu(A))
rate       4.50 million edges/sec (just tricount itself)
L*U' time (dot):         0.000022 sec (nthreads: 4 speedup 2.2347)
tricount time:         0.000032 sec (dot product method)
tri+prep time:         0.000124 sec (incl time to compute L and U)
compute C time:        0.000022 sec
reduce (C) time:       0.000010 sec
rate       1.42 million edges/sec (incl time for U=triu(A))
rate       5.48 million edges/sec (just tricount itself)
L*U' time (dot):         0.000020 sec (nthreads: 8 speedup 2.47809)
tricount time:         0.000029 sec (dot product method)
tri+prep time:         0.000121 sec (incl time to compute L and U)
compute C time:        0.000020 sec
reduce (C) time:       0.000010 sec
rate       1.45 million edges/sec (incl time for U=triu(A))
rate       5.98 million edges/sec (just tricount itself)
L*U' time (dot):         0.000020 sec (nthreads: 16 speedup 2.50407)
tricount time:         0.000030 sec (dot product method)
tri+prep time:         0.000122 sec (incl time to compute L and U)
compute C time:        0.000020 sec
reduce (C) time:       0.000010 sec
rate       1.45 million edges/sec (incl time for U=triu(A))
rate       5.89 million edges/sec (just tricount itself)
L*U' time (dot):         0.000018 sec (nthreads: 32 speedup 2.66398)
tricount time:         0.000028 sec (dot product method)
tri+prep time:         0.000120 sec (incl time to compute L and U)
compute C time:        0.000018 sec
reduce (C) time:       0.000010 sec
rate       1.47 million edges/sec (incl time for U=triu(A))
rate       6.27 million edges/sec (just tricount itself)
L*U' time (dot):         0.000030 sec
tricount time:         0.000042 sec (dot product method)
tri+prep time:         0.000134 sec (incl time to compute L and U)
compute C time:        0.000030 sec
reduce (C) time:       0.000013 sec
rate       1.31 million edges/sec (incl time for U=triu(A))
rate       4.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.000025 sec (nthreads: 2 speedup 1.19216)
tricount time:         0.000036 sec (dot product method)
tri+prep time:         0.000128 sec (incl time to compute L and U)
compute C time:        0.000025 sec
reduce (C) time:       0.000011 sec
rate       1.38 million edges/sec (incl time for U=triu(A))
rate       4.92 million edges/sec (just tricount itself)
L*U' time (dot):         0.000022 sec (nthreads: 4 speedup 1.32586)
tricount time:         0.000032 sec (dot product method)
tri+prep time:         0.000124 sec (incl time to compute L and U)
compute C time:        0.000022 sec
reduce (C) time:       0.000010 sec
rate       1.42 million edges/sec (incl time for U=triu(A))
rate       5.48 million edges/sec (just tricount itself)
L*U' time (dot):         0.000021 sec (nthreads: 8 speedup 1.38195)
tricount time:         0.000031 sec (dot product method)
tri+prep time:         0.000122 sec (incl time to compute L and U)
compute C time:        0.000021 sec
reduce (C) time:       0.000009 sec
rate       1.44 million edges/sec (incl time for U=triu(A))
rate       5.73 million edges/sec (just tricount itself)
L*U' time (dot):         0.000020 sec (nthreads: 16 speedup 1.49644)
tricount time:         0.000029 sec (dot product method)
tri+prep time:         0.000121 sec (incl time to compute L and U)
compute C time:        0.000020 sec
reduce (C) time:       0.000009 sec
rate       1.46 million edges/sec (incl time for U=triu(A))
rate       6.03 million edges/sec (just tricount itself)
L*U' time (dot):         0.000021 sec (nthreads: 32 speedup 1.37539)
tricount time:         0.000045 sec (dot product method)
tri+prep time:         0.000136 sec (incl time to compute L and U)
compute C time:        0.000021 sec
reduce (C) time:       0.000023 sec
rate       1.29 million edges/sec (incl time for U=triu(A))
rate       3.94 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000043 sec
tricount time:         0.000045 sec (saxpy method)
tri+prep time:         0.000072 sec (incl time to compute L)
compute C time:        0.000043 sec
reduce (C) time:       0.000002 sec
rate       2.46 million edges/sec (incl time for L=tril(A))
rate       3.90 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000022 sec (nthreads: 2 speedup 1.92194)
tricount time:         0.000024 sec (saxpy method)
tri+prep time:         0.000050 sec (incl time to compute L)
compute C time:        0.000022 sec
reduce (C) time:       0.000002 sec
rate       3.49 million edges/sec (incl time for L=tril(A))
rate       7.32 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000018 sec (nthreads: 4 speedup 2.41296)
tricount time:         0.000019 sec (saxpy method)
tri+prep time:         0.000046 sec (incl time to compute L)
compute C time:        0.000018 sec
reduce (C) time:       0.000002 sec
rate       3.83 million edges/sec (incl time for L=tril(A))
rate       9.04 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000015 sec (nthreads: 8 speedup 2.89441)
tricount time:         0.000016 sec (saxpy method)
tri+prep time:         0.000043 sec (incl time to compute L)
compute C time:        0.000015 sec
reduce (C) time:       0.000002 sec
rate       4.11 million edges/sec (incl time for L=tril(A))
rate      10.74 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000014 sec (nthreads: 16 speedup 3.10535)
tricount time:         0.000015 sec (saxpy method)
tri+prep time:         0.000042 sec (incl time to compute L)
compute C time:        0.000014 sec
reduce (C) time:       0.000002 sec
rate       4.22 million edges/sec (incl time for L=tril(A))
rate      11.52 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000013 sec (nthreads: 32 speedup 3.20469)
tricount time:         0.000015 sec (saxpy method)
tri+prep time:         0.000041 sec (incl time to compute L)
compute C time:        0.000013 sec
reduce (C) time:       0.000002 sec
rate       4.27 million edges/sec (incl time for L=tril(A))
rate      11.87 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 4884 by 4884, 285494 entries, from stdin

total time to read A matrix:       0.113711 sec

n 4884 # edges 142747
U=triu(A) time:        0.006216 sec
L=tril(A) time:        0.005391 sec

------------------------------------- dot product method:
# triangles 1512964
L*U' time (dot):         0.015270 sec
tricount time:         0.016954 sec (dot product method)
tri+prep time:         0.028562 sec (incl time to compute L and U)
compute C time:        0.015270 sec
reduce (C) time:       0.001685 sec
rate       5.00 million edges/sec (incl time for U=triu(A))
rate       8.42 million edges/sec (just tricount itself)
L*U' time (dot):         0.009330 sec (nthreads: 2 speedup 1.63666)
tricount time:         0.009965 sec (dot product method)
tri+prep time:         0.021572 sec (incl time to compute L and U)
compute C time:        0.009330 sec
reduce (C) time:       0.000635 sec
rate       6.62 million edges/sec (incl time for U=triu(A))
rate      14.32 million edges/sec (just tricount itself)
L*U' time (dot):         0.005277 sec (nthreads: 4 speedup 2.89374)
tricount time:         0.005683 sec (dot product method)
tri+prep time:         0.017290 sec (incl time to compute L and U)
compute C time:        0.005277 sec
reduce (C) time:       0.000406 sec
rate       8.26 million edges/sec (incl time for U=triu(A))
rate      25.12 million edges/sec (just tricount itself)
L*U' time (dot):         0.003258 sec (nthreads: 8 speedup 4.68741)
tricount time:         0.003645 sec (dot product method)
tri+prep time:         0.015252 sec (incl time to compute L and U)
compute C time:        0.003258 sec
reduce (C) time:       0.000387 sec
rate       9.36 million edges/sec (incl time for U=triu(A))
rate      39.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.001990 sec (nthreads: 16 speedup 7.67414)
tricount time:         0.002542 sec (dot product method)
tri+prep time:         0.014149 sec (incl time to compute L and U)
compute C time:        0.001990 sec
reduce (C) time:       0.000552 sec
rate      10.09 million edges/sec (incl time for U=triu(A))
rate      56.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.002013 sec (nthreads: 32 speedup 7.58719)
tricount time:         0.004790 sec (dot product method)
tri+prep time:         0.016397 sec (incl time to compute L and U)
compute C time:        0.002013 sec
reduce (C) time:       0.002778 sec
rate       8.71 million edges/sec (incl time for U=triu(A))
rate      29.80 million edges/sec (just tricount itself)
L*U' time (dot):         0.016205 sec
tricount time:         0.017262 sec (dot product method)
tri+prep time:         0.028869 sec (incl time to compute L and U)
compute C time:        0.016205 sec
reduce (C) time:       0.001056 sec
rate       4.94 million edges/sec (incl time for U=triu(A))
rate       8.27 million edges/sec (just tricount itself)
L*U' time (dot):         0.008890 sec (nthreads: 2 speedup 1.82292)
tricount time:         0.009502 sec (dot product method)
tri+prep time:         0.021109 sec (incl time to compute L and U)
compute C time:        0.008890 sec
reduce (C) time:       0.000612 sec
rate       6.76 million edges/sec (incl time for U=triu(A))
rate      15.02 million edges/sec (just tricount itself)
L*U' time (dot):         0.005417 sec (nthreads: 4 speedup 2.99155)
tricount time:         0.005840 sec (dot product method)
tri+prep time:         0.017448 sec (incl time to compute L and U)
compute C time:        0.005417 sec
reduce (C) time:       0.000423 sec
rate       8.18 million edges/sec (incl time for U=triu(A))
rate      24.44 million edges/sec (just tricount itself)
L*U' time (dot):         0.003336 sec (nthreads: 8 speedup 4.858)
tricount time:         0.003732 sec (dot product method)
tri+prep time:         0.015339 sec (incl time to compute L and U)
compute C time:        0.003336 sec
reduce (C) time:       0.000396 sec
rate       9.31 million edges/sec (incl time for U=triu(A))
rate      38.25 million edges/sec (just tricount itself)
L*U' time (dot):         0.002173 sec (nthreads: 16 speedup 7.4573)
tricount time:         0.002776 sec (dot product method)
tri+prep time:         0.014383 sec (incl time to compute L and U)
compute C time:        0.002173 sec
reduce (C) time:       0.000603 sec
rate       9.92 million edges/sec (incl time for U=triu(A))
rate      51.43 million edges/sec (just tricount itself)
L*U' time (dot):         0.002292 sec (nthreads: 32 speedup 7.06977)
tricount time:         0.004473 sec (dot product method)
tri+prep time:         0.016081 sec (incl time to compute L and U)
compute C time:        0.002292 sec
reduce (C) time:       0.002181 sec
rate       8.88 million edges/sec (incl time for U=triu(A))
rate      31.91 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.006027 sec
tricount time:         0.006634 sec (saxpy method)
tri+prep time:         0.012025 sec (incl time to compute L)
compute C time:        0.006027 sec
reduce (C) time:       0.000608 sec
rate      11.87 million edges/sec (incl time for L=tril(A))
rate      21.52 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.004789 sec (nthreads: 2 speedup 1.25855)
tricount time:         0.005109 sec (saxpy method)
tri+prep time:         0.010500 sec (incl time to compute L)
compute C time:        0.004789 sec
reduce (C) time:       0.000320 sec
rate      13.60 million edges/sec (incl time for L=tril(A))
rate      27.94 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.002640 sec (nthreads: 4 speedup 2.28312)
tricount time:         0.002811 sec (saxpy method)
tri+prep time:         0.008202 sec (incl time to compute L)
compute C time:        0.002640 sec
reduce (C) time:       0.000172 sec
rate      17.40 million edges/sec (incl time for L=tril(A))
rate      50.78 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001769 sec (nthreads: 8 speedup 3.40634)
tricount time:         0.001864 sec (saxpy method)
tri+prep time:         0.007255 sec (incl time to compute L)
compute C time:        0.001769 sec
reduce (C) time:       0.000094 sec
rate      19.68 million edges/sec (incl time for L=tril(A))
rate      76.60 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001771 sec (nthreads: 16 speedup 3.40213)
tricount time:         0.001840 sec (saxpy method)
tri+prep time:         0.007231 sec (incl time to compute L)
compute C time:        0.001771 sec
reduce (C) time:       0.000069 sec
rate      19.74 million edges/sec (incl time for L=tril(A))
rate      77.56 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.005359 sec (nthreads: 32 speedup 1.12463)
tricount time:         0.005507 sec (saxpy method)
tri+prep time:         0.010898 sec (incl time to compute L)
compute C time:        0.005359 sec
reduce (C) time:       0.000148 sec
rate      13.10 million edges/sec (incl time for L=tril(A))
rate      25.92 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 183 by 183, 1402 entries, from stdin

total time to read A matrix:       0.001384 sec

n 183 # edges 701
U=triu(A) time:        0.000050 sec
L=tril(A) time:        0.000021 sec

------------------------------------- dot product method:
# triangles 863
L*U' time (dot):         0.000082 sec
tricount time:         0.000109 sec (dot product method)
tri+prep time:         0.000179 sec (incl time to compute L and U)
compute C time:        0.000082 sec
reduce (C) time:       0.000027 sec
rate       3.91 million edges/sec (incl time for U=triu(A))
rate       6.45 million edges/sec (just tricount itself)
L*U' time (dot):         0.000064 sec (nthreads: 2 speedup 1.29174)
tricount time:         0.000077 sec (dot product method)
tri+prep time:         0.000147 sec (incl time to compute L and U)
compute C time:        0.000064 sec
reduce (C) time:       0.000013 sec
rate       4.76 million edges/sec (incl time for U=triu(A))
rate       9.14 million edges/sec (just tricount itself)
L*U' time (dot):         0.000058 sec (nthreads: 4 speedup 1.41933)
tricount time:         0.000070 sec (dot product method)
tri+prep time:         0.000141 sec (incl time to compute L and U)
compute C time:        0.000058 sec
reduce (C) time:       0.000012 sec
rate       4.98 million edges/sec (incl time for U=triu(A))
rate       9.99 million edges/sec (just tricount itself)
L*U' time (dot):         0.000056 sec (nthreads: 8 speedup 1.47253)
tricount time:         0.000068 sec (dot product method)
tri+prep time:         0.000138 sec (incl time to compute L and U)
compute C time:        0.000056 sec
reduce (C) time:       0.000012 sec
rate       5.08 million edges/sec (incl time for U=triu(A))
rate      10.38 million edges/sec (just tricount itself)
L*U' time (dot):         0.000054 sec (nthreads: 16 speedup 1.51814)
tricount time:         0.000066 sec (dot product method)
tri+prep time:         0.000136 sec (incl time to compute L and U)
compute C time:        0.000054 sec
reduce (C) time:       0.000012 sec
rate       5.15 million edges/sec (incl time for U=triu(A))
rate      10.69 million edges/sec (just tricount itself)
L*U' time (dot):         0.000053 sec (nthreads: 32 speedup 1.54011)
tricount time:         0.000065 sec (dot product method)
tri+prep time:         0.000135 sec (incl time to compute L and U)
compute C time:        0.000053 sec
reduce (C) time:       0.000011 sec
rate       5.18 million edges/sec (incl time for U=triu(A))
rate      10.85 million edges/sec (just tricount itself)
L*U' time (dot):         0.000069 sec
tricount time:         0.000082 sec (dot product method)
tri+prep time:         0.000153 sec (incl time to compute L and U)
compute C time:        0.000069 sec
reduce (C) time:       0.000013 sec
rate       4.59 million edges/sec (incl time for U=triu(A))
rate       8.53 million edges/sec (just tricount itself)
L*U' time (dot):         0.000063 sec (nthreads: 2 speedup 1.08843)
tricount time:         0.000076 sec (dot product method)
tri+prep time:         0.000146 sec (incl time to compute L and U)
compute C time:        0.000063 sec
reduce (C) time:       0.000012 sec
rate       4.79 million edges/sec (incl time for U=triu(A))
rate       9.27 million edges/sec (just tricount itself)
L*U' time (dot):         0.000060 sec (nthreads: 4 speedup 1.14219)
tricount time:         0.000073 sec (dot product method)
tri+prep time:         0.000143 sec (incl time to compute L and U)
compute C time:        0.000060 sec
reduce (C) time:       0.000012 sec
rate       4.90 million edges/sec (incl time for U=triu(A))
rate       9.66 million edges/sec (just tricount itself)
L*U' time (dot):         0.000057 sec (nthreads: 8 speedup 1.20568)
tricount time:         0.000069 sec (dot product method)
tri+prep time:         0.000140 sec (incl time to compute L and U)
compute C time:        0.000057 sec
reduce (C) time:       0.000012 sec
rate       5.01 million edges/sec (incl time for U=triu(A))
rate      10.12 million edges/sec (just tricount itself)
L*U' time (dot):         0.000056 sec (nthreads: 16 speedup 1.23602)
tricount time:         0.000068 sec (dot product method)
tri+prep time:         0.000139 sec (incl time to compute L and U)
compute C time:        0.000056 sec
reduce (C) time:       0.000012 sec
rate       5.06 million edges/sec (incl time for U=triu(A))
rate      10.31 million edges/sec (just tricount itself)
L*U' time (dot):         0.000057 sec (nthreads: 32 speedup 1.20982)
tricount time:         0.000069 sec (dot product method)
tri+prep time:         0.000140 sec (incl time to compute L and U)
compute C time:        0.000057 sec
reduce (C) time:       0.000013 sec
rate       5.01 million edges/sec (incl time for U=triu(A))
rate      10.10 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000048 sec
tricount time:         0.000050 sec (saxpy method)
tri+prep time:         0.000071 sec (incl time to compute L)
compute C time:        0.000048 sec
reduce (C) time:       0.000003 sec
rate       9.84 million edges/sec (incl time for L=tril(A))
rate      13.91 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000033 sec (nthreads: 2 speedup 1.43173)
tricount time:         0.000036 sec (saxpy method)
tri+prep time:         0.000057 sec (incl time to compute L)
compute C time:        0.000033 sec
reduce (C) time:       0.000003 sec
rate      12.37 million edges/sec (incl time for L=tril(A))
rate      19.58 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000029 sec (nthreads: 4 speedup 1.66278)
tricount time:         0.000031 sec (saxpy method)
tri+prep time:         0.000052 sec (incl time to compute L)
compute C time:        0.000029 sec
reduce (C) time:       0.000002 sec
rate      13.49 million edges/sec (incl time for L=tril(A))
rate      22.55 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000026 sec (nthreads: 8 speedup 1.81865)
tricount time:         0.000029 sec (saxpy method)
tri+prep time:         0.000049 sec (incl time to compute L)
compute C time:        0.000026 sec
reduce (C) time:       0.000002 sec
rate      14.17 million edges/sec (incl time for L=tril(A))
rate      24.52 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000024 sec (nthreads: 16 speedup 2.0008)
tricount time:         0.000026 sec (saxpy method)
tri+prep time:         0.000047 sec (incl time to compute L)
compute C time:        0.000024 sec
reduce (C) time:       0.000002 sec
rate      14.90 million edges/sec (incl time for L=tril(A))
rate      26.77 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000022 sec (nthreads: 32 speedup 2.1677)
tricount time:         0.000024 sec (saxpy method)
tri+prep time:         0.000045 sec (incl time to compute L)
compute C time:        0.000022 sec
reduce (C) time:       0.000002 sec
rate      15.50 million edges/sec (incl time for L=tril(A))
rate      28.80 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 63 by 63, 246 entries, from stdin

total time to read A matrix:       0.000729 sec

n 63 # edges 123
U=triu(A) time:        0.000040 sec
L=tril(A) time:        0.000017 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000030 sec
tricount time:         0.000054 sec (dot product method)
tri+prep time:         0.000111 sec (incl time to compute L and U)
compute C time:        0.000030 sec
reduce (C) time:       0.000024 sec
rate       1.10 million edges/sec (incl time for U=triu(A))
rate       2.26 million edges/sec (just tricount itself)
L*U' time (dot):         0.000013 sec (nthreads: 2 speedup 2.41227)
tricount time:         0.000023 sec (dot product method)
tri+prep time:         0.000080 sec (incl time to compute L and U)
compute C time:        0.000013 sec
reduce (C) time:       0.000010 sec
rate       1.54 million edges/sec (incl time for U=triu(A))
rate       5.39 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 4 speedup 3.0259)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000076 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000009 sec
rate       1.61 million edges/sec (incl time for U=triu(A))
rate       6.33 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 8 speedup 3.26611)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000075 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000009 sec
rate       1.63 million edges/sec (incl time for U=triu(A))
rate       6.63 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 16 speedup 3.23692)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000076 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000010 sec
rate       1.62 million edges/sec (incl time for U=triu(A))
rate       6.49 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 32 speedup 3.25594)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000075 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000009 sec
rate       1.63 million edges/sec (incl time for U=triu(A))
rate       6.65 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec
tricount time:         0.000020 sec (dot product method)
tri+prep time:         0.000077 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000010 sec
rate       1.59 million edges/sec (incl time for U=triu(A))
rate       6.07 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 2 speedup 1.05855)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000076 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000009 sec
rate       1.62 million edges/sec (incl time for U=triu(A))
rate       6.46 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 4 speedup 1.07856)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000076 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000009 sec
rate       1.63 million edges/sec (incl time for U=triu(A))
rate       6.57 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 8 speedup 1.11023)
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000075 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000009 sec
rate       1.64 million edges/sec (incl time for U=triu(A))
rate       6.72 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 16 speedup 1.12813)
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000075 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000009 sec
rate       1.64 million edges/sec (incl time for U=triu(A))
rate       6.83 million edges/sec (just tricount itself)
L*U' time (dot):         0.000011 sec (nthreads: 32 speedup 0.911859)
tricount time:         0.000021 sec (dot product method)
tri+prep time:         0.000078 sec (incl time to compute L and U)
compute C time:        0.000011 sec
reduce (C) time:       0.000009 sec
rate       1.59 million edges/sec (incl time for U=triu(A))
rate       5.93 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000038 sec
tricount time:         0.000039 sec (saxpy method)
tri+prep time:         0.000057 sec (incl time to compute L)
compute C time:        0.000038 sec
reduce (C) time:       0.000001 sec
rate       2.17 million edges/sec (incl time for L=tril(A))
rate       3.13 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000029 sec (nthreads: 2 speedup 1.34714)
tricount time:         0.000029 sec (saxpy method)
tri+prep time:         0.000047 sec (incl time to compute L)
compute C time:        0.000029 sec
reduce (C) time:       0.000001 sec
rate       2.64 million edges/sec (incl time for L=tril(A))
rate       4.20 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000029 sec (nthreads: 4 speedup 1.30621)
tricount time:         0.000030 sec (saxpy method)
tri+prep time:         0.000047 sec (incl time to compute L)
compute C time:        0.000029 sec
reduce (C) time:       0.000001 sec
rate       2.59 million edges/sec (incl time for L=tril(A))
rate       4.08 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000037 sec (nthreads: 8 speedup 1.04853)
tricount time:         0.000037 sec (saxpy method)
tri+prep time:         0.000055 sec (incl time to compute L)
compute C time:        0.000037 sec
reduce (C) time:       0.000001 sec
rate       2.25 million edges/sec (incl time for L=tril(A))
rate       3.29 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000051 sec (nthreads: 16 speedup 0.758835)
tricount time:         0.000051 sec (saxpy method)
tri+prep time:         0.000069 sec (incl time to compute L)
compute C time:        0.000051 sec
reduce (C) time:       0.000001 sec
rate       1.79 million edges/sec (incl time for L=tril(A))
rate       2.39 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000081 sec (nthreads: 32 speedup 0.471659)
tricount time:         0.000082 sec (saxpy method)
tri+prep time:         0.000100 sec (incl time to compute L)
compute C time:        0.000081 sec
reduce (C) time:       0.000001 sec
rate       1.23 million edges/sec (incl time for L=tril(A))
rate       1.49 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 63 by 63, 246 entries, from stdin

total time to read A matrix:       0.000668 sec

n 63 # edges 123
U=triu(A) time:        0.000041 sec
L=tril(A) time:        0.000016 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000021 sec
tricount time:         0.000043 sec (dot product method)
tri+prep time:         0.000100 sec (incl time to compute L and U)
compute C time:        0.000021 sec
reduce (C) time:       0.000022 sec
rate       1.23 million edges/sec (incl time for U=triu(A))
rate       2.85 million edges/sec (just tricount itself)
L*U' time (dot):         0.000011 sec (nthreads: 2 speedup 1.96243)
tricount time:         0.000020 sec (dot product method)
tri+prep time:         0.000077 sec (incl time to compute L and U)
compute C time:        0.000011 sec
reduce (C) time:       0.000009 sec
rate       1.59 million edges/sec (incl time for U=triu(A))
rate       6.08 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 4 speedup 2.39897)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000075 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000008 sec
rate       1.65 million edges/sec (incl time for U=triu(A))
rate       7.09 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 8 speedup 2.66572)
tricount time:         0.000016 sec (dot product method)
tri+prep time:         0.000073 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000008 sec
rate       1.68 million edges/sec (incl time for U=triu(A))
rate       7.65 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 16 speedup 2.58776)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000074 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000008 sec
rate       1.66 million edges/sec (incl time for U=triu(A))
rate       7.35 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 32 speedup 2.60765)
tricount time:         0.000016 sec (dot product method)
tri+prep time:         0.000073 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000008 sec
rate       1.68 million edges/sec (incl time for U=triu(A))
rate       7.58 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000075 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000009 sec
rate       1.63 million edges/sec (incl time for U=triu(A))
rate       6.80 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 2 speedup 1.10401)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000074 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000008 sec
rate       1.67 million edges/sec (incl time for U=triu(A))
rate       7.45 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 4 speedup 1.14452)
tricount time:         0.000016 sec (dot product method)
tri+prep time:         0.000073 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000008 sec
rate       1.68 million edges/sec (incl time for U=triu(A))
rate       7.76 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 8 speedup 1.17376)
tricount time:         0.000016 sec (dot product method)
tri+prep time:         0.000073 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000008 sec
rate       1.69 million edges/sec (incl time for U=triu(A))
rate       7.84 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 16 speedup 1.15621)
tricount time:         0.000016 sec (dot product method)
tri+prep time:         0.000073 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000008 sec
rate       1.69 million edges/sec (incl time for U=triu(A))
rate       7.89 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 32 speedup 0.942341)
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000075 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000008 sec
rate       1.63 million edges/sec (incl time for U=triu(A))
rate       6.77 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000035 sec
tricount time:         0.000036 sec (saxpy method)
tri+prep time:         0.000052 sec (incl time to compute L)
compute C time:        0.000035 sec
reduce (C) time:       0.000001 sec
rate       2.38 million edges/sec (incl time for L=tril(A))
rate       3.46 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000026 sec (nthreads: 2 speedup 1.36151)
tricount time:         0.000026 sec (saxpy method)
tri+prep time:         0.000043 sec (incl time to compute L)
compute C time:        0.000026 sec
reduce (C) time:       0.000001 sec
rate       2.89 million edges/sec (incl time for L=tril(A))
rate       4.68 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000027 sec (nthreads: 4 speedup 1.28473)
tricount time:         0.000028 sec (saxpy method)
tri+prep time:         0.000044 sec (incl time to compute L)
compute C time:        0.000027 sec
reduce (C) time:       0.000001 sec
rate       2.79 million edges/sec (incl time for L=tril(A))
rate       4.43 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000035 sec (nthreads: 8 speedup 1.00668)
tricount time:         0.000035 sec (saxpy method)
tri+prep time:         0.000052 sec (incl time to compute L)
compute C time:        0.000035 sec
reduce (C) time:       0.000001 sec
rate       2.39 million edges/sec (incl time for L=tril(A))
rate       3.49 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000048 sec (nthreads: 16 speedup 0.732287)
tricount time:         0.000048 sec (saxpy method)
tri+prep time:         0.000065 sec (incl time to compute L)
compute C time:        0.000048 sec
reduce (C) time:       0.000001 sec
rate       1.90 million edges/sec (incl time for L=tril(A))
rate       2.55 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000077 sec (nthreads: 32 speedup 0.454815)
tricount time:         0.000077 sec (saxpy method)
tri+prep time:         0.000094 sec (incl time to compute L)
compute C time:        0.000077 sec
reduce (C) time:       0.000001 sec
rate       1.31 million edges/sec (incl time for L=tril(A))
rate       1.59 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 78 by 78, 204 entries, from stdin

total time to read A matrix:       0.000705 sec

n 78 # edges 102
U=triu(A) time:        0.000039 sec
L=tril(A) time:        0.000017 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000029 sec
tricount time:         0.000052 sec (dot product method)
tri+prep time:         0.000108 sec (incl time to compute L and U)
compute C time:        0.000029 sec
reduce (C) time:       0.000023 sec
rate       0.95 million edges/sec (incl time for U=triu(A))
rate       1.96 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec (nthreads: 2 speedup 2.52629)
tricount time:         0.000021 sec (dot product method)
tri+prep time:         0.000077 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000010 sec
rate       1.33 million edges/sec (incl time for U=triu(A))
rate       4.75 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 4 speedup 3.17835)
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000074 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000009 sec
rate       1.38 million edges/sec (incl time for U=triu(A))
rate       5.53 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 8 speedup 3.3126)
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000073 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000009 sec
rate       1.40 million edges/sec (incl time for U=triu(A))
rate       5.83 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 16 speedup 3.40546)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000073 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000009 sec
rate       1.40 million edges/sec (incl time for U=triu(A))
rate       5.94 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 32 speedup 3.17867)
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000073 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000009 sec
rate       1.39 million edges/sec (incl time for U=triu(A))
rate       5.77 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000074 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000009 sec
rate       1.37 million edges/sec (incl time for U=triu(A))
rate       5.43 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 2 speedup 1.07514)
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000073 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000009 sec
rate       1.40 million edges/sec (incl time for U=triu(A))
rate       5.79 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 4 speedup 1.13956)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000073 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000009 sec
rate       1.41 million edges/sec (incl time for U=triu(A))
rate       5.96 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 8 speedup 1.0621)
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000073 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000009 sec
rate       1.39 million edges/sec (incl time for U=triu(A))
rate       5.70 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 16 speedup 1.12574)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000073 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000009 sec
rate       1.40 million edges/sec (incl time for U=triu(A))
rate       5.93 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 32 speedup 0.924325)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000075 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000009 sec
rate       1.36 million edges/sec (incl time for U=triu(A))
rate       5.29 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000036 sec
tricount time:         0.000037 sec (saxpy method)
tri+prep time:         0.000053 sec (incl time to compute L)
compute C time:        0.000036 sec
reduce (C) time:       0.000001 sec
rate       1.91 million edges/sec (incl time for L=tril(A))
rate       2.78 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000027 sec (nthreads: 2 speedup 1.33639)
tricount time:         0.000028 sec (saxpy method)
tri+prep time:         0.000044 sec (incl time to compute L)
compute C time:        0.000027 sec
reduce (C) time:       0.000001 sec
rate       2.30 million edges/sec (incl time for L=tril(A))
rate       3.71 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000028 sec (nthreads: 4 speedup 1.28468)
tricount time:         0.000029 sec (saxpy method)
tri+prep time:         0.000045 sec (incl time to compute L)
compute C time:        0.000028 sec
reduce (C) time:       0.000001 sec
rate       2.25 million edges/sec (incl time for L=tril(A))
rate       3.58 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000035 sec (nthreads: 8 speedup 1.02284)
tricount time:         0.000036 sec (saxpy method)
tri+prep time:         0.000052 sec (incl time to compute L)
compute C time:        0.000035 sec
reduce (C) time:       0.000001 sec
rate       1.94 million edges/sec (incl time for L=tril(A))
rate       2.86 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000049 sec (nthreads: 16 speedup 0.733373)
tricount time:         0.000050 sec (saxpy method)
tri+prep time:         0.000066 sec (incl time to compute L)
compute C time:        0.000049 sec
reduce (C) time:       0.000001 sec
rate       1.54 million edges/sec (incl time for L=tril(A))
rate       2.06 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000081 sec (nthreads: 32 speedup 0.445319)
tricount time:         0.000081 sec (saxpy method)
tri+prep time:         0.000098 sec (incl time to compute L)
compute C time:        0.000081 sec
reduce (C) time:       0.000001 sec
rate       1.04 million edges/sec (incl time for L=tril(A))
rate       1.25 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 982 by 982, 99840 entries, from stdin

total time to read A matrix:       0.039242 sec

n 982 # edges 49920
U=triu(A) time:        0.000322 sec
L=tril(A) time:        0.000322 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000875 sec
tricount time:         0.001033 sec (dot product method)
tri+prep time:         0.001677 sec (incl time to compute L and U)
compute C time:        0.000875 sec
reduce (C) time:       0.000158 sec
rate      29.77 million edges/sec (incl time for U=triu(A))
rate      48.33 million edges/sec (just tricount itself)
L*U' time (dot):         0.000484 sec (nthreads: 2 speedup 1.80794)
tricount time:         0.000564 sec (dot product method)
tri+prep time:         0.001208 sec (incl time to compute L and U)
compute C time:        0.000484 sec
reduce (C) time:       0.000080 sec
rate      41.32 million edges/sec (incl time for U=triu(A))
rate      88.45 million edges/sec (just tricount itself)
L*U' time (dot):         0.000300 sec (nthreads: 4 speedup 2.92012)
tricount time:         0.000350 sec (dot product method)
tri+prep time:         0.000994 sec (incl time to compute L and U)
compute C time:        0.000300 sec
reduce (C) time:       0.000051 sec
rate      50.20 million edges/sec (incl time for U=triu(A))
rate     142.44 million edges/sec (just tricount itself)
L*U' time (dot):         0.000295 sec (nthreads: 8 speedup 2.96421)
tricount time:         0.000340 sec (dot product method)
tri+prep time:         0.000984 sec (incl time to compute L and U)
compute C time:        0.000295 sec
reduce (C) time:       0.000045 sec
rate      50.72 million edges/sec (incl time for U=triu(A))
rate     146.70 million edges/sec (just tricount itself)
L*U' time (dot):         0.000486 sec (nthreads: 16 speedup 1.79995)
tricount time:         0.000556 sec (dot product method)
tri+prep time:         0.001200 sec (incl time to compute L and U)
compute C time:        0.000486 sec
reduce (C) time:       0.000069 sec
rate      41.61 million edges/sec (incl time for U=triu(A))
rate      89.83 million edges/sec (just tricount itself)
L*U' time (dot):         0.001858 sec (nthreads: 32 speedup 0.471047)
tricount time:         0.001945 sec (dot product method)
tri+prep time:         0.002589 sec (incl time to compute L and U)
compute C time:        0.001858 sec
reduce (C) time:       0.000086 sec
rate      19.28 million edges/sec (incl time for U=triu(A))
rate      25.67 million edges/sec (just tricount itself)
L*U' time (dot):         0.000549 sec
tricount time:         0.000653 sec (dot product method)
tri+prep time:         0.001297 sec (incl time to compute L and U)
compute C time:        0.000549 sec
reduce (C) time:       0.000104 sec
rate      38.49 million edges/sec (incl time for U=triu(A))
rate      76.44 million edges/sec (just tricount itself)
L*U' time (dot):         0.000369 sec (nthreads: 2 speedup 1.4892)
tricount time:         0.000443 sec (dot product method)
tri+prep time:         0.001087 sec (incl time to compute L and U)
compute C time:        0.000369 sec
reduce (C) time:       0.000074 sec
rate      45.91 million edges/sec (incl time for U=triu(A))
rate     112.59 million edges/sec (just tricount itself)
L*U' time (dot):         0.000257 sec (nthreads: 4 speedup 2.1371)
tricount time:         0.000308 sec (dot product method)
tri+prep time:         0.000952 sec (incl time to compute L and U)
compute C time:        0.000257 sec
reduce (C) time:       0.000051 sec
rate      52.45 million edges/sec (incl time for U=triu(A))
rate     162.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.000303 sec (nthreads: 8 speedup 1.81454)
tricount time:         0.000348 sec (dot product method)
tri+prep time:         0.000991 sec (incl time to compute L and U)
compute C time:        0.000303 sec
reduce (C) time:       0.000045 sec
rate      50.35 million edges/sec (incl time for U=triu(A))
rate     143.64 million edges/sec (just tricount itself)
L*U' time (dot):         0.000429 sec (nthreads: 16 speedup 1.28043)
tricount time:         0.000494 sec (dot product method)
tri+prep time:         0.001138 sec (incl time to compute L and U)
compute C time:        0.000429 sec
reduce (C) time:       0.000065 sec
rate      43.87 million edges/sec (incl time for U=triu(A))
rate     101.02 million edges/sec (just tricount itself)
L*U' time (dot):         0.002481 sec (nthreads: 32 speedup 0.221444)
tricount time:         0.002556 sec (dot product method)
tri+prep time:         0.003200 sec (incl time to compute L and U)
compute C time:        0.002481 sec
reduce (C) time:       0.000075 sec
rate      15.60 million edges/sec (incl time for U=triu(A))
rate      19.53 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000197 sec
tricount time:         0.000200 sec (saxpy method)
tri+prep time:         0.000522 sec (incl time to compute L)
compute C time:        0.000197 sec
reduce (C) time:       0.000003 sec
rate      95.66 million edges/sec (incl time for L=tril(A))
rate     249.62 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000194 sec (nthreads: 2 speedup 1.01487)
tricount time:         0.000195 sec (saxpy method)
tri+prep time:         0.000517 sec (incl time to compute L)
compute C time:        0.000194 sec
reduce (C) time:       0.000001 sec
rate      96.50 million edges/sec (incl time for L=tril(A))
rate     255.47 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000202 sec (nthreads: 4 speedup 0.976348)
tricount time:         0.000203 sec (saxpy method)
tri+prep time:         0.000525 sec (incl time to compute L)
compute C time:        0.000202 sec
reduce (C) time:       0.000001 sec
rate      95.12 million edges/sec (incl time for L=tril(A))
rate     246.01 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000235 sec (nthreads: 8 speedup 0.837672)
tricount time:         0.000236 sec (saxpy method)
tri+prep time:         0.000558 sec (incl time to compute L)
compute C time:        0.000235 sec
reduce (C) time:       0.000001 sec
rate      89.46 million edges/sec (incl time for L=tril(A))
rate     211.40 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000316 sec (nthreads: 16 speedup 0.624721)
tricount time:         0.000317 sec (saxpy method)
tri+prep time:         0.000638 sec (incl time to compute L)
compute C time:        0.000316 sec
reduce (C) time:       0.000001 sec
rate      78.19 million edges/sec (incl time for L=tril(A))
rate     157.68 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000269 sec (nthreads: 32 speedup 0.7328)
tricount time:         0.000270 sec (saxpy method)
tri+prep time:         0.000592 sec (incl time to compute L)
compute C time:        0.000269 sec
reduce (C) time:       0.000001 sec
rate      84.37 million edges/sec (incl time for L=tril(A))
rate     185.05 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 67 by 67, 574 entries, from stdin

total time to read A matrix:       0.000555 sec

n 67 # edges 287
U=triu(A) time:        0.000041 sec
L=tril(A) time:        0.000019 sec

------------------------------------- dot product method:
# triangles 120
L*U' time (dot):         0.000039 sec
tricount time:         0.000060 sec (dot product method)
tri+prep time:         0.000120 sec (incl time to compute L and U)
compute C time:        0.000039 sec
reduce (C) time:       0.000021 sec
rate       2.39 million edges/sec (incl time for U=triu(A))
rate       4.80 million edges/sec (just tricount itself)
L*U' time (dot):         0.000023 sec (nthreads: 2 speedup 1.69008)
tricount time:         0.000032 sec (dot product method)
tri+prep time:         0.000093 sec (incl time to compute L and U)
compute C time:        0.000023 sec
reduce (C) time:       0.000009 sec
rate       3.10 million edges/sec (incl time for U=triu(A))
rate       8.89 million edges/sec (just tricount itself)
L*U' time (dot):         0.000019 sec (nthreads: 4 speedup 2.03667)
tricount time:         0.000026 sec (dot product method)
tri+prep time:         0.000087 sec (incl time to compute L and U)
compute C time:        0.000019 sec
reduce (C) time:       0.000007 sec
rate       3.31 million edges/sec (incl time for U=triu(A))
rate      10.94 million edges/sec (just tricount itself)
L*U' time (dot):         0.000018 sec (nthreads: 8 speedup 2.17405)
tricount time:         0.000025 sec (dot product method)
tri+prep time:         0.000085 sec (incl time to compute L and U)
compute C time:        0.000018 sec
reduce (C) time:       0.000007 sec
rate       3.38 million edges/sec (incl time for U=triu(A))
rate      11.63 million edges/sec (just tricount itself)
L*U' time (dot):         0.000018 sec (nthreads: 16 speedup 2.206)
tricount time:         0.000025 sec (dot product method)
tri+prep time:         0.000085 sec (incl time to compute L and U)
compute C time:        0.000018 sec
reduce (C) time:       0.000007 sec
rate       3.38 million edges/sec (incl time for U=triu(A))
rate      11.66 million edges/sec (just tricount itself)
L*U' time (dot):         0.000016 sec (nthreads: 32 speedup 2.3881)
tricount time:         0.000023 sec (dot product method)
tri+prep time:         0.000083 sec (incl time to compute L and U)
compute C time:        0.000016 sec
reduce (C) time:       0.000006 sec
rate       3.46 million edges/sec (incl time for U=triu(A))
rate      12.70 million edges/sec (just tricount itself)
L*U' time (dot):         0.000024 sec
tricount time:         0.000032 sec (dot product method)
tri+prep time:         0.000093 sec (incl time to compute L and U)
compute C time:        0.000024 sec
reduce (C) time:       0.000009 sec
rate       3.09 million edges/sec (incl time for U=triu(A))
rate       8.84 million edges/sec (just tricount itself)
L*U' time (dot):         0.000021 sec (nthreads: 2 speedup 1.16181)
tricount time:         0.000028 sec (dot product method)
tri+prep time:         0.000088 sec (incl time to compute L and U)
compute C time:        0.000021 sec
reduce (C) time:       0.000007 sec
rate       3.25 million edges/sec (incl time for U=triu(A))
rate      10.31 million edges/sec (just tricount itself)
L*U' time (dot):         0.000020 sec (nthreads: 4 speedup 1.20184)
tricount time:         0.000027 sec (dot product method)
tri+prep time:         0.000087 sec (incl time to compute L and U)
compute C time:        0.000020 sec
reduce (C) time:       0.000007 sec
rate       3.29 million edges/sec (incl time for U=triu(A))
rate      10.70 million edges/sec (just tricount itself)
L*U' time (dot):         0.000017 sec (nthreads: 8 speedup 1.38132)
tricount time:         0.000024 sec (dot product method)
tri+prep time:         0.000084 sec (incl time to compute L and U)
compute C time:        0.000017 sec
reduce (C) time:       0.000006 sec
rate       3.41 million edges/sec (incl time for U=triu(A))
rate      12.08 million edges/sec (just tricount itself)
L*U' time (dot):         0.000017 sec (nthreads: 16 speedup 1.4011)
tricount time:         0.000023 sec (dot product method)
tri+prep time:         0.000084 sec (incl time to compute L and U)
compute C time:        0.000017 sec
reduce (C) time:       0.000006 sec
rate       3.43 million edges/sec (incl time for U=triu(A))
rate      12.31 million edges/sec (just tricount itself)
L*U' time (dot):         0.000018 sec (nthreads: 32 speedup 1.30773)
tricount time:         0.000025 sec (dot product method)
tri+prep time:         0.000085 sec (incl time to compute L and U)
compute C time:        0.000018 sec
reduce (C) time:       0.000007 sec
rate       3.36 million edges/sec (incl time for U=triu(A))
rate      11.51 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000029 sec
tricount time:         0.000031 sec (saxpy method)
tri+prep time:         0.000050 sec (incl time to compute L)
compute C time:        0.000029 sec
reduce (C) time:       0.000001 sec
rate       5.74 million edges/sec (incl time for L=tril(A))
rate       9.34 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000018 sec (nthreads: 2 speedup 1.64245)
tricount time:         0.000019 sec (saxpy method)
tri+prep time:         0.000038 sec (incl time to compute L)
compute C time:        0.000018 sec
reduce (C) time:       0.000001 sec
rate       7.50 million edges/sec (incl time for L=tril(A))
rate      15.13 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000014 sec (nthreads: 4 speedup 2.14474)
tricount time:         0.000015 sec (saxpy method)
tri+prep time:         0.000034 sec (incl time to compute L)
compute C time:        0.000014 sec
reduce (C) time:       0.000001 sec
rate       8.44 million edges/sec (incl time for L=tril(A))
rate      19.46 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000012 sec (nthreads: 8 speedup 2.54277)
tricount time:         0.000013 sec (saxpy method)
tri+prep time:         0.000032 sec (incl time to compute L)
compute C time:        0.000012 sec
reduce (C) time:       0.000001 sec
rate       9.01 million edges/sec (incl time for L=tril(A))
rate      22.82 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000010 sec (nthreads: 16 speedup 2.83248)
tricount time:         0.000011 sec (saxpy method)
tri+prep time:         0.000031 sec (incl time to compute L)
compute C time:        0.000010 sec
reduce (C) time:       0.000001 sec
rate       9.38 million edges/sec (incl time for L=tril(A))
rate      25.35 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000010 sec (nthreads: 32 speedup 2.95663)
tricount time:         0.000011 sec (saxpy method)
tri+prep time:         0.000030 sec (incl time to compute L)
compute C time:        0.000010 sec
reduce (C) time:       0.000001 sec
rate       9.52 million edges/sec (incl time for L=tril(A))
rate      26.40 million edges/sec (just tricount itself)

--------------------------------------------------------------
Wathen: nx 200 ny 200 n 120801 nz 1762400 method 0, time: 0.103 sec

total time to read A matrix:       0.103766 sec

n 120801 # edges 881200
U=triu(A) time:        0.003212 sec
L=tril(A) time:        0.000764 sec

------------------------------------- dot product method:
# triangles 2160400
L*U' time (dot):         0.029728 sec
tricount time:         0.036760 sec (dot product method)
tri+prep time:         0.040736 sec (incl time to compute L and U)
compute C time:        0.029728 sec
reduce (C) time:       0.007033 sec
rate      21.63 million edges/sec (incl time for U=triu(A))
rate      23.97 million edges/sec (just tricount itself)
L*U' time (dot):         0.016974 sec (nthreads: 2 speedup 1.75138)
tricount time:         0.020563 sec (dot product method)
tri+prep time:         0.024539 sec (incl time to compute L and U)
compute C time:        0.016974 sec
reduce (C) time:       0.003590 sec
rate      35.91 million edges/sec (incl time for U=triu(A))
rate      42.85 million edges/sec (just tricount itself)
L*U' time (dot):         0.009622 sec (nthreads: 4 speedup 3.08943)
tricount time:         0.011826 sec (dot product method)
tri+prep time:         0.015802 sec (incl time to compute L and U)
compute C time:        0.009622 sec
reduce (C) time:       0.002204 sec
rate      55.76 million edges/sec (incl time for U=triu(A))
rate      74.51 million edges/sec (just tricount itself)
L*U' time (dot):         0.005170 sec (nthreads: 8 speedup 5.74975)
tricount time:         0.006656 sec (dot product method)
tri+prep time:         0.010632 sec (incl time to compute L and U)
compute C time:        0.005170 sec
reduce (C) time:       0.001486 sec
rate      82.88 million edges/sec (incl time for U=triu(A))
rate     132.39 million edges/sec (just tricount itself)
L*U' time (dot):         0.003274 sec (nthreads: 16 speedup 9.08072)
tricount time:         0.004067 sec (dot product method)
tri+prep time:         0.008043 sec (incl time to compute L and U)
compute C time:        0.003274 sec
reduce (C) time:       0.000793 sec
rate     109.56 million edges/sec (incl time for U=triu(A))
rate     216.67 million edges/sec (just tricount itself)
L*U' time (dot):         0.003559 sec (nthreads: 32 speedup 8.35206)
tricount time:         0.004233 sec (dot product method)
tri+prep time:         0.008209 sec (incl time to compute L and U)
compute C time:        0.003559 sec
reduce (C) time:       0.000674 sec
rate     107.35 million edges/sec (incl time for U=triu(A))
rate     208.17 million edges/sec (just tricount itself)
L*U' time (dot):         0.029669 sec
tricount time:         0.036863 sec (dot product method)
tri+prep time:         0.040839 sec (incl time to compute L and U)
compute C time:        0.029669 sec
reduce (C) time:       0.007194 sec
rate      21.58 million edges/sec (incl time for U=triu(A))
rate      23.90 million edges/sec (just tricount itself)
L*U' time (dot):         0.016548 sec (nthreads: 2 speedup 1.79293)
tricount time:         0.020389 sec (dot product method)
tri+prep time:         0.024364 sec (incl time to compute L and U)
compute C time:        0.016548 sec
reduce (C) time:       0.003841 sec
rate      36.17 million edges/sec (incl time for U=triu(A))
rate      43.22 million edges/sec (just tricount itself)
L*U' time (dot):         0.008599 sec (nthreads: 4 speedup 3.45043)
tricount time:         0.010527 sec (dot product method)
tri+prep time:         0.014503 sec (incl time to compute L and U)
compute C time:        0.008599 sec
reduce (C) time:       0.001928 sec
rate      60.76 million edges/sec (incl time for U=triu(A))
rate      83.71 million edges/sec (just tricount itself)
L*U' time (dot):         0.005491 sec (nthreads: 8 speedup 5.40308)
tricount time:         0.006799 sec (dot product method)
tri+prep time:         0.010775 sec (incl time to compute L and U)
compute C time:        0.005491 sec
reduce (C) time:       0.001308 sec
rate      81.78 million edges/sec (incl time for U=triu(A))
rate     129.60 million edges/sec (just tricount itself)
L*U' time (dot):         0.003333 sec (nthreads: 16 speedup 8.90269)
tricount time:         0.004135 sec (dot product method)
tri+prep time:         0.008111 sec (incl time to compute L and U)
compute C time:        0.003333 sec
reduce (C) time:       0.000802 sec
rate     108.64 million edges/sec (incl time for U=triu(A))
rate     213.10 million edges/sec (just tricount itself)
L*U' time (dot):         0.003521 sec (nthreads: 32 speedup 8.42572)
tricount time:         0.004265 sec (dot product method)
tri+prep time:         0.008241 sec (incl time to compute L and U)
compute C time:        0.003521 sec
reduce (C) time:       0.000743 sec
rate     106.93 million edges/sec (incl time for U=triu(A))
rate     206.63 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.017455 sec
tricount time:         0.021370 sec (saxpy method)
tri+prep time:         0.022134 sec (incl time to compute L)
compute C time:        0.017455 sec
reduce (C) time:       0.003915 sec
rate      39.81 million edges/sec (incl time for L=tril(A))
rate      41.23 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.017756 sec (nthreads: 2 speedup 0.983049)
tricount time:         0.019520 sec (saxpy method)
tri+prep time:         0.020284 sec (incl time to compute L)
compute C time:        0.017756 sec
reduce (C) time:       0.001764 sec
rate      43.44 million edges/sec (incl time for L=tril(A))
rate      45.14 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.010580 sec (nthreads: 4 speedup 1.6498)
tricount time:         0.011752 sec (saxpy method)
tri+prep time:         0.012516 sec (incl time to compute L)
compute C time:        0.010580 sec
reduce (C) time:       0.001172 sec
rate      70.41 million edges/sec (incl time for L=tril(A))
rate      74.98 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.006899 sec (nthreads: 8 speedup 2.52988)
tricount time:         0.007487 sec (saxpy method)
tri+prep time:         0.008251 sec (incl time to compute L)
compute C time:        0.006899 sec
reduce (C) time:       0.000588 sec
rate     106.80 million edges/sec (incl time for L=tril(A))
rate     117.69 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.005221 sec (nthreads: 16 speedup 3.34333)
tricount time:         0.005529 sec (saxpy method)
tri+prep time:         0.006293 sec (incl time to compute L)
compute C time:        0.005221 sec
reduce (C) time:       0.000308 sec
rate     140.03 million edges/sec (incl time for L=tril(A))
rate     159.37 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.006903 sec (nthreads: 32 speedup 2.52844)
tricount time:         0.007183 sec (saxpy method)
tri+prep time:         0.007947 sec (incl time to compute L)
compute C time:        0.006903 sec
reduce (C) time:       0.000279 sec
rate     110.89 million edges/sec (incl time for L=tril(A))
rate     122.68 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 10000 by 10000, nz: 199768, method 0 time 0.041 sec

total time to read A matrix:       0.046197 sec

n 10000 # edges 99884
U=triu(A) time:        0.003044 sec
L=tril(A) time:        0.005432 sec

------------------------------------- dot product method:
# triangles 1357
L*U' time (dot):         0.013000 sec
tricount time:         0.013435 sec (dot product method)
tri+prep time:         0.021912 sec (incl time to compute L and U)
compute C time:        0.013000 sec
reduce (C) time:       0.000435 sec
rate       4.56 million edges/sec (incl time for U=triu(A))
rate       7.43 million edges/sec (just tricount itself)
L*U' time (dot):         0.007464 sec (nthreads: 2 speedup 1.7418)
tricount time:         0.007735 sec (dot product method)
tri+prep time:         0.016212 sec (incl time to compute L and U)
compute C time:        0.007464 sec
reduce (C) time:       0.000272 sec
rate       6.16 million edges/sec (incl time for U=triu(A))
rate      12.91 million edges/sec (just tricount itself)
L*U' time (dot):         0.004295 sec (nthreads: 4 speedup 3.02698)
tricount time:         0.004475 sec (dot product method)
tri+prep time:         0.012952 sec (incl time to compute L and U)
compute C time:        0.004295 sec
reduce (C) time:       0.000180 sec
rate       7.71 million edges/sec (incl time for U=triu(A))
rate      22.32 million edges/sec (just tricount itself)
L*U' time (dot):         0.002747 sec (nthreads: 8 speedup 4.73244)
tricount time:         0.002873 sec (dot product method)
tri+prep time:         0.011350 sec (incl time to compute L and U)
compute C time:        0.002747 sec
reduce (C) time:       0.000126 sec
rate       8.80 million edges/sec (incl time for U=triu(A))
rate      34.76 million edges/sec (just tricount itself)
L*U' time (dot):         0.001649 sec (nthreads: 16 speedup 7.88358)
tricount time:         0.001983 sec (dot product method)
tri+prep time:         0.010460 sec (incl time to compute L and U)
compute C time:        0.001649 sec
reduce (C) time:       0.000334 sec
rate       9.55 million edges/sec (incl time for U=triu(A))
rate      50.36 million edges/sec (just tricount itself)
L*U' time (dot):         0.001582 sec (nthreads: 32 speedup 8.21994)
tricount time:         0.002666 sec (dot product method)
tri+prep time:         0.011143 sec (incl time to compute L and U)
compute C time:        0.001582 sec
reduce (C) time:       0.001085 sec
rate       8.96 million edges/sec (incl time for U=triu(A))
rate      37.46 million edges/sec (just tricount itself)
L*U' time (dot):         0.012460 sec
tricount time:         0.012877 sec (dot product method)
tri+prep time:         0.021354 sec (incl time to compute L and U)
compute C time:        0.012460 sec
reduce (C) time:       0.000417 sec
rate       4.68 million edges/sec (incl time for U=triu(A))
rate       7.76 million edges/sec (just tricount itself)
L*U' time (dot):         0.006798 sec (nthreads: 2 speedup 1.83296)
tricount time:         0.007067 sec (dot product method)
tri+prep time:         0.015544 sec (incl time to compute L and U)
compute C time:        0.006798 sec
reduce (C) time:       0.000269 sec
rate       6.43 million edges/sec (incl time for U=triu(A))
rate      14.13 million edges/sec (just tricount itself)
L*U' time (dot):         0.004116 sec (nthreads: 4 speedup 3.02739)
tricount time:         0.004309 sec (dot product method)
tri+prep time:         0.012786 sec (incl time to compute L and U)
compute C time:        0.004116 sec
reduce (C) time:       0.000193 sec
rate       7.81 million edges/sec (incl time for U=triu(A))
rate      23.18 million edges/sec (just tricount itself)
L*U' time (dot):         0.002640 sec (nthreads: 8 speedup 4.71911)
tricount time:         0.002785 sec (dot product method)
tri+prep time:         0.011262 sec (incl time to compute L and U)
compute C time:        0.002640 sec
reduce (C) time:       0.000145 sec
rate       8.87 million edges/sec (incl time for U=triu(A))
rate      35.86 million edges/sec (just tricount itself)
L*U' time (dot):         0.001642 sec (nthreads: 16 speedup 7.58824)
tricount time:         0.001970 sec (dot product method)
tri+prep time:         0.010446 sec (incl time to compute L and U)
compute C time:        0.001642 sec
reduce (C) time:       0.000328 sec
rate       9.56 million edges/sec (incl time for U=triu(A))
rate      50.71 million edges/sec (just tricount itself)
L*U' time (dot):         0.001565 sec (nthreads: 32 speedup 7.95926)
tricount time:         0.002637 sec (dot product method)
tri+prep time:         0.011114 sec (incl time to compute L and U)
compute C time:        0.001565 sec
reduce (C) time:       0.001072 sec
rate       8.99 million edges/sec (incl time for U=triu(A))
rate      37.87 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.004013 sec
tricount time:         0.004021 sec (saxpy method)
tri+prep time:         0.009453 sec (incl time to compute L)
compute C time:        0.004013 sec
reduce (C) time:       0.000008 sec
rate      10.57 million edges/sec (incl time for L=tril(A))
rate      24.84 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.002586 sec (nthreads: 2 speedup 1.55183)
tricount time:         0.002593 sec (saxpy method)
tri+prep time:         0.008026 sec (incl time to compute L)
compute C time:        0.002586 sec
reduce (C) time:       0.000007 sec
rate      12.45 million edges/sec (incl time for L=tril(A))
rate      38.52 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001477 sec (nthreads: 4 speedup 2.71623)
tricount time:         0.001485 sec (saxpy method)
tri+prep time:         0.006917 sec (incl time to compute L)
compute C time:        0.001477 sec
reduce (C) time:       0.000008 sec
rate      14.44 million edges/sec (incl time for L=tril(A))
rate      67.26 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001178 sec (nthreads: 8 speedup 3.40719)
tricount time:         0.001185 sec (saxpy method)
tri+prep time:         0.006618 sec (incl time to compute L)
compute C time:        0.001178 sec
reduce (C) time:       0.000008 sec
rate      15.09 million edges/sec (incl time for L=tril(A))
rate      84.26 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001535 sec (nthreads: 16 speedup 2.6149)
tricount time:         0.001542 sec (saxpy method)
tri+prep time:         0.006974 sec (incl time to compute L)
compute C time:        0.001535 sec
reduce (C) time:       0.000008 sec
rate      14.32 million edges/sec (incl time for L=tril(A))
rate      64.77 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.002617 sec (nthreads: 32 speedup 1.53325)
tricount time:         0.002626 sec (saxpy method)
tri+prep time:         0.008059 sec (incl time to compute L)
compute C time:        0.002617 sec
reduce (C) time:       0.000009 sec
rate      12.39 million edges/sec (incl time for L=tril(A))
rate      38.03 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 10000 by 10000, nz: 199768, method 1 time 0.031 sec

total time to read A matrix:       0.035698 sec

n 10000 # edges 99884
U=triu(A) time:        0.003238 sec
L=tril(A) time:        0.002742 sec

------------------------------------- dot product method:
# triangles 1357
L*U' time (dot):         0.017783 sec
tricount time:         0.018320 sec (dot product method)
tri+prep time:         0.024300 sec (incl time to compute L and U)
compute C time:        0.017783 sec
reduce (C) time:       0.000538 sec
rate       4.11 million edges/sec (incl time for U=triu(A))
rate       5.45 million edges/sec (just tricount itself)
L*U' time (dot):         0.008543 sec (nthreads: 2 speedup 2.08156)
tricount time:         0.008848 sec (dot product method)
tri+prep time:         0.014827 sec (incl time to compute L and U)
compute C time:        0.008543 sec
reduce (C) time:       0.000305 sec
rate       6.74 million edges/sec (incl time for U=triu(A))
rate      11.29 million edges/sec (just tricount itself)
L*U' time (dot):         0.005523 sec (nthreads: 4 speedup 3.22006)
tricount time:         0.005739 sec (dot product method)
tri+prep time:         0.011719 sec (incl time to compute L and U)
compute C time:        0.005523 sec
reduce (C) time:       0.000216 sec
rate       8.52 million edges/sec (incl time for U=triu(A))
rate      17.40 million edges/sec (just tricount itself)
L*U' time (dot):         0.003153 sec (nthreads: 8 speedup 5.63973)
tricount time:         0.003300 sec (dot product method)
tri+prep time:         0.009279 sec (incl time to compute L and U)
compute C time:        0.003153 sec
reduce (C) time:       0.000146 sec
rate      10.76 million edges/sec (incl time for U=triu(A))
rate      30.27 million edges/sec (just tricount itself)
L*U' time (dot):         0.002032 sec (nthreads: 16 speedup 8.7503)
tricount time:         0.002410 sec (dot product method)
tri+prep time:         0.008390 sec (incl time to compute L and U)
compute C time:        0.002032 sec
reduce (C) time:       0.000378 sec
rate      11.91 million edges/sec (incl time for U=triu(A))
rate      41.44 million edges/sec (just tricount itself)
L*U' time (dot):         0.001820 sec (nthreads: 32 speedup 9.77109)
tricount time:         0.003598 sec (dot product method)
tri+prep time:         0.009578 sec (incl time to compute L and U)
compute C time:        0.001820 sec
reduce (C) time:       0.001778 sec
rate      10.43 million edges/sec (incl time for U=triu(A))
rate      27.76 million edges/sec (just tricount itself)
L*U' time (dot):         0.015857 sec
tricount time:         0.016382 sec (dot product method)
tri+prep time:         0.022361 sec (incl time to compute L and U)
compute C time:        0.015857 sec
reduce (C) time:       0.000525 sec
rate       4.47 million edges/sec (incl time for U=triu(A))
rate       6.10 million edges/sec (just tricount itself)
L*U' time (dot):         0.008181 sec (nthreads: 2 speedup 1.93825)
tricount time:         0.008490 sec (dot product method)
tri+prep time:         0.014470 sec (incl time to compute L and U)
compute C time:        0.008181 sec
reduce (C) time:       0.000309 sec
rate       6.90 million edges/sec (incl time for U=triu(A))
rate      11.76 million edges/sec (just tricount itself)
L*U' time (dot):         0.004574 sec (nthreads: 4 speedup 3.46686)
tricount time:         0.004794 sec (dot product method)
tri+prep time:         0.010774 sec (incl time to compute L and U)
compute C time:        0.004574 sec
reduce (C) time:       0.000220 sec
rate       9.27 million edges/sec (incl time for U=triu(A))
rate      20.84 million edges/sec (just tricount itself)
L*U' time (dot):         0.002862 sec (nthreads: 8 speedup 5.54063)
tricount time:         0.003035 sec (dot product method)
tri+prep time:         0.009014 sec (incl time to compute L and U)
compute C time:        0.002862 sec
reduce (C) time:       0.000173 sec
rate      11.08 million edges/sec (incl time for U=triu(A))
rate      32.91 million edges/sec (just tricount itself)
L*U' time (dot):         0.001829 sec (nthreads: 16 speedup 8.67077)
tricount time:         0.002204 sec (dot product method)
tri+prep time:         0.008184 sec (incl time to compute L and U)
compute C time:        0.001829 sec
reduce (C) time:       0.000376 sec
rate      12.20 million edges/sec (incl time for U=triu(A))
rate      45.31 million edges/sec (just tricount itself)
L*U' time (dot):         0.004400 sec (nthreads: 32 speedup 3.60393)
tricount time:         0.005704 sec (dot product method)
tri+prep time:         0.011683 sec (incl time to compute L and U)
compute C time:        0.004400 sec
reduce (C) time:       0.001304 sec
rate       8.55 million edges/sec (incl time for U=triu(A))
rate      17.51 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.004890 sec
tricount time:         0.004900 sec (saxpy method)
tri+prep time:         0.007641 sec (incl time to compute L)
compute C time:        0.004890 sec
reduce (C) time:       0.000009 sec
rate      13.07 million edges/sec (incl time for L=tril(A))
rate      20.39 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.003485 sec (nthreads: 2 speedup 1.40337)
tricount time:         0.003494 sec (saxpy method)
tri+prep time:         0.006236 sec (incl time to compute L)
compute C time:        0.003485 sec
reduce (C) time:       0.000009 sec
rate      16.02 million edges/sec (incl time for L=tril(A))
rate      28.59 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001820 sec (nthreads: 4 speedup 2.6866)
tricount time:         0.001829 sec (saxpy method)
tri+prep time:         0.004571 sec (incl time to compute L)
compute C time:        0.001820 sec
reduce (C) time:       0.000009 sec
rate      21.85 million edges/sec (incl time for L=tril(A))
rate      54.61 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001254 sec (nthreads: 8 speedup 3.89887)
tricount time:         0.001264 sec (saxpy method)
tri+prep time:         0.004005 sec (incl time to compute L)
compute C time:        0.001254 sec
reduce (C) time:       0.000009 sec
rate      24.94 million edges/sec (incl time for L=tril(A))
rate      79.05 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001540 sec (nthreads: 16 speedup 3.17638)
tricount time:         0.001549 sec (saxpy method)
tri+prep time:         0.004291 sec (incl time to compute L)
compute C time:        0.001540 sec
reduce (C) time:       0.000009 sec
rate      23.28 million edges/sec (incl time for L=tril(A))
rate      64.49 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.002987 sec (nthreads: 32 speedup 1.63721)
tricount time:         0.002998 sec (saxpy method)
tri+prep time:         0.005740 sec (incl time to compute L)
compute C time:        0.002987 sec
reduce (C) time:       0.000011 sec
rate      17.40 million edges/sec (incl time for L=tril(A))
rate      33.31 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 100000 by 100000, nz: 19980330, method 0 time 2.206 sec

total time to read A matrix:       2.223417 sec

n 100000 # edges 9990165
U=triu(A) time:        0.009389 sec
L=tril(A) time:        0.008017 sec

------------------------------------- dot product method:
# triangles 1330131
L*U' time (dot):        10.154736 sec
tricount time:        10.211061 sec (dot product method)
tri+prep time:        10.228468 sec (incl time to compute L and U)
compute C time:       10.154736 sec
reduce (C) time:       0.056325 sec
rate       0.98 million edges/sec (incl time for U=triu(A))
rate       0.98 million edges/sec (just tricount itself)
L*U' time (dot):         5.144116 sec (nthreads: 2 speedup 1.97405)
tricount time:         5.178243 sec (dot product method)
tri+prep time:         5.195649 sec (incl time to compute L and U)
compute C time:        5.144116 sec
reduce (C) time:       0.034128 sec
rate       1.92 million edges/sec (incl time for U=triu(A))
rate       1.93 million edges/sec (just tricount itself)
L*U' time (dot):         2.581320 sec (nthreads: 4 speedup 3.93393)
tricount time:         2.602296 sec (dot product method)
tri+prep time:         2.619702 sec (incl time to compute L and U)
compute C time:        2.581320 sec
reduce (C) time:       0.020976 sec
rate       3.81 million edges/sec (incl time for U=triu(A))
rate       3.84 million edges/sec (just tricount itself)
L*U' time (dot):         1.304316 sec (nthreads: 8 speedup 7.78549)
tricount time:         1.319417 sec (dot product method)
tri+prep time:         1.336823 sec (incl time to compute L and U)
compute C time:        1.304316 sec
reduce (C) time:       0.015101 sec
rate       7.47 million edges/sec (incl time for U=triu(A))
rate       7.57 million edges/sec (just tricount itself)
L*U' time (dot):         0.670855 sec (nthreads: 16 speedup 15.137)
tricount time:         0.683685 sec (dot product method)
tri+prep time:         0.701091 sec (incl time to compute L and U)
compute C time:        0.670855 sec
reduce (C) time:       0.012830 sec
rate      14.25 million edges/sec (incl time for U=triu(A))
rate      14.61 million edges/sec (just tricount itself)
L*U' time (dot):         0.400067 sec (nthreads: 32 speedup 25.3826)
tricount time:         0.411393 sec (dot product method)
tri+prep time:         0.428799 sec (incl time to compute L and U)
compute C time:        0.400067 sec
reduce (C) time:       0.011326 sec
rate      23.30 million edges/sec (incl time for U=triu(A))
rate      24.28 million edges/sec (just tricount itself)
L*U' time (dot):        10.318314 sec
tricount time:        10.367729 sec (dot product method)
tri+prep time:        10.385135 sec (incl time to compute L and U)
compute C time:       10.318314 sec
reduce (C) time:       0.049414 sec
rate       0.96 million edges/sec (incl time for U=triu(A))
rate       0.96 million edges/sec (just tricount itself)
L*U' time (dot):         5.231802 sec (nthreads: 2 speedup 1.97223)
tricount time:         5.262158 sec (dot product method)
tri+prep time:         5.279564 sec (incl time to compute L and U)
compute C time:        5.231802 sec
reduce (C) time:       0.030357 sec
rate       1.89 million edges/sec (incl time for U=triu(A))
rate       1.90 million edges/sec (just tricount itself)
L*U' time (dot):         2.647840 sec (nthreads: 4 speedup 3.89688)
tricount time:         2.667760 sec (dot product method)
tri+prep time:         2.685166 sec (incl time to compute L and U)
compute C time:        2.647840 sec
reduce (C) time:       0.019920 sec
rate       3.72 million edges/sec (incl time for U=triu(A))
rate       3.74 million edges/sec (just tricount itself)
L*U' time (dot):         1.334589 sec (nthreads: 8 speedup 7.73146)
tricount time:         1.349294 sec (dot product method)
tri+prep time:         1.366700 sec (incl time to compute L and U)
compute C time:        1.334589 sec
reduce (C) time:       0.014705 sec
rate       7.31 million edges/sec (incl time for U=triu(A))
rate       7.40 million edges/sec (just tricount itself)
L*U' time (dot):         0.682957 sec (nthreads: 16 speedup 15.1083)
tricount time:         0.694423 sec (dot product method)
tri+prep time:         0.711829 sec (incl time to compute L and U)
compute C time:        0.682957 sec
reduce (C) time:       0.011466 sec
rate      14.03 million edges/sec (incl time for U=triu(A))
rate      14.39 million edges/sec (just tricount itself)
L*U' time (dot):         0.406612 sec (nthreads: 32 speedup 25.3763)
tricount time:         0.418449 sec (dot product method)
tri+prep time:         0.435855 sec (incl time to compute L and U)
compute C time:        0.406612 sec
reduce (C) time:       0.011837 sec
rate      22.92 million edges/sec (incl time for U=triu(A))
rate      23.87 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         2.275291 sec
tricount time:         2.281548 sec (saxpy method)
tri+prep time:         2.289564 sec (incl time to compute L)
compute C time:        2.275291 sec
reduce (C) time:       0.006257 sec
rate       4.36 million edges/sec (incl time for L=tril(A))
rate       4.38 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         1.329376 sec (nthreads: 2 speedup 1.71155)
tricount time:         1.332291 sec (saxpy method)
tri+prep time:         1.340307 sec (incl time to compute L)
compute C time:        1.329376 sec
reduce (C) time:       0.002914 sec
rate       7.45 million edges/sec (incl time for L=tril(A))
rate       7.50 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.733922 sec (nthreads: 4 speedup 3.10018)
tricount time:         0.735290 sec (saxpy method)
tri+prep time:         0.743307 sec (incl time to compute L)
compute C time:        0.733922 sec
reduce (C) time:       0.001368 sec
rate      13.44 million edges/sec (incl time for L=tril(A))
rate      13.59 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.379981 sec (nthreads: 8 speedup 5.98791)
tricount time:         0.380614 sec (saxpy method)
tri+prep time:         0.388631 sec (incl time to compute L)
compute C time:        0.379981 sec
reduce (C) time:       0.000633 sec
rate      25.71 million edges/sec (incl time for L=tril(A))
rate      26.25 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.220059 sec (nthreads: 16 speedup 10.3395)
tricount time:         0.220389 sec (saxpy method)
tri+prep time:         0.228406 sec (incl time to compute L)
compute C time:        0.220059 sec
reduce (C) time:       0.000330 sec
rate      43.74 million edges/sec (incl time for L=tril(A))
rate      45.33 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.177751 sec (nthreads: 32 speedup 12.8004)
tricount time:         0.178491 sec (saxpy method)
tri+prep time:         0.186507 sec (incl time to compute L)
compute C time:        0.177751 sec
reduce (C) time:       0.000739 sec
rate      53.56 million edges/sec (incl time for L=tril(A))
rate      55.97 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 100000 by 100000, nz: 19980330, method 1 time 1.358 sec

total time to read A matrix:       1.373378 sec

n 100000 # edges 9990165
U=triu(A) time:        0.011773 sec
L=tril(A) time:        0.007480 sec

------------------------------------- dot product method:
# triangles 1330131
L*U' time (dot):        10.097238 sec
tricount time:        10.153764 sec (dot product method)
tri+prep time:        10.173017 sec (incl time to compute L and U)
compute C time:       10.097238 sec
reduce (C) time:       0.056526 sec
rate       0.98 million edges/sec (incl time for U=triu(A))
rate       0.98 million edges/sec (just tricount itself)
L*U' time (dot):         5.141591 sec (nthreads: 2 speedup 1.96384)
tricount time:         5.175693 sec (dot product method)
tri+prep time:         5.194947 sec (incl time to compute L and U)
compute C time:        5.141591 sec
reduce (C) time:       0.034102 sec
rate       1.92 million edges/sec (incl time for U=triu(A))
rate       1.93 million edges/sec (just tricount itself)
L*U' time (dot):         2.572865 sec (nthreads: 4 speedup 3.92451)
tricount time:         2.593160 sec (dot product method)
tri+prep time:         2.612413 sec (incl time to compute L and U)
compute C time:        2.572865 sec
reduce (C) time:       0.020295 sec
rate       3.82 million edges/sec (incl time for U=triu(A))
rate       3.85 million edges/sec (just tricount itself)
L*U' time (dot):         1.310306 sec (nthreads: 8 speedup 7.70601)
tricount time:         1.325576 sec (dot product method)
tri+prep time:         1.344830 sec (incl time to compute L and U)
compute C time:        1.310306 sec
reduce (C) time:       0.015270 sec
rate       7.43 million edges/sec (incl time for U=triu(A))
rate       7.54 million edges/sec (just tricount itself)
L*U' time (dot):         0.664748 sec (nthreads: 16 speedup 15.1896)
tricount time:         0.676293 sec (dot product method)
tri+prep time:         0.695546 sec (incl time to compute L and U)
compute C time:        0.664748 sec
reduce (C) time:       0.011545 sec
rate      14.36 million edges/sec (incl time for U=triu(A))
rate      14.77 million edges/sec (just tricount itself)
L*U' time (dot):         0.397795 sec (nthreads: 32 speedup 25.383)
tricount time:         0.409458 sec (dot product method)
tri+prep time:         0.428711 sec (incl time to compute L and U)
compute C time:        0.397795 sec
reduce (C) time:       0.011663 sec
rate      23.30 million edges/sec (incl time for U=triu(A))
rate      24.40 million edges/sec (just tricount itself)
L*U' time (dot):        10.430272 sec
tricount time:        10.480139 sec (dot product method)
tri+prep time:        10.499392 sec (incl time to compute L and U)
compute C time:       10.430272 sec
reduce (C) time:       0.049867 sec
rate       0.95 million edges/sec (incl time for U=triu(A))
rate       0.95 million edges/sec (just tricount itself)
L*U' time (dot):         5.280755 sec (nthreads: 2 speedup 1.97515)
tricount time:         5.311437 sec (dot product method)
tri+prep time:         5.330690 sec (incl time to compute L and U)
compute C time:        5.280755 sec
reduce (C) time:       0.030682 sec
rate       1.87 million edges/sec (incl time for U=triu(A))
rate       1.88 million edges/sec (just tricount itself)
L*U' time (dot):         2.650433 sec (nthreads: 4 speedup 3.93531)
tricount time:         2.671086 sec (dot product method)
tri+prep time:         2.690339 sec (incl time to compute L and U)
compute C time:        2.650433 sec
reduce (C) time:       0.020653 sec
rate       3.71 million edges/sec (incl time for U=triu(A))
rate       3.74 million edges/sec (just tricount itself)
L*U' time (dot):         1.337364 sec (nthreads: 8 speedup 7.79913)
tricount time:         1.352712 sec (dot product method)
tri+prep time:         1.371966 sec (incl time to compute L and U)
compute C time:        1.337364 sec
reduce (C) time:       0.015348 sec
rate       7.28 million edges/sec (incl time for U=triu(A))
rate       7.39 million edges/sec (just tricount itself)
L*U' time (dot):         0.684550 sec (nthreads: 16 speedup 15.2367)
tricount time:         0.697919 sec (dot product method)
tri+prep time:         0.717172 sec (incl time to compute L and U)
compute C time:        0.684550 sec
reduce (C) time:       0.013368 sec
rate      13.93 million edges/sec (incl time for U=triu(A))
rate      14.31 million edges/sec (just tricount itself)
L*U' time (dot):         0.409997 sec (nthreads: 32 speedup 25.4399)
tricount time:         0.422338 sec (dot product method)
tri+prep time:         0.441591 sec (incl time to compute L and U)
compute C time:        0.409997 sec
reduce (C) time:       0.012341 sec
rate      22.62 million edges/sec (incl time for U=triu(A))
rate      23.65 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         2.373299 sec
tricount time:         2.379602 sec (saxpy method)
tri+prep time:         2.387082 sec (incl time to compute L)
compute C time:        2.373299 sec
reduce (C) time:       0.006303 sec
rate       4.19 million edges/sec (incl time for L=tril(A))
rate       4.20 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         1.389014 sec (nthreads: 2 speedup 1.70862)
tricount time:         1.391705 sec (saxpy method)
tri+prep time:         1.399185 sec (incl time to compute L)
compute C time:        1.389014 sec
reduce (C) time:       0.002690 sec
rate       7.14 million edges/sec (incl time for L=tril(A))
rate       7.18 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.704975 sec (nthreads: 4 speedup 3.3665)
tricount time:         0.706229 sec (saxpy method)
tri+prep time:         0.713709 sec (incl time to compute L)
compute C time:        0.704975 sec
reduce (C) time:       0.001253 sec
rate      14.00 million edges/sec (incl time for L=tril(A))
rate      14.15 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.378052 sec (nthreads: 8 speedup 6.27771)
tricount time:         0.378688 sec (saxpy method)
tri+prep time:         0.386167 sec (incl time to compute L)
compute C time:        0.378052 sec
reduce (C) time:       0.000636 sec
rate      25.87 million edges/sec (incl time for L=tril(A))
rate      26.38 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.213988 sec (nthreads: 16 speedup 11.0908)
tricount time:         0.214335 sec (saxpy method)
tri+prep time:         0.221815 sec (incl time to compute L)
compute C time:        0.213988 sec
reduce (C) time:       0.000347 sec
rate      45.04 million edges/sec (incl time for L=tril(A))
rate      46.61 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.175610 sec (nthreads: 32 speedup 13.5146)
tricount time:         0.176128 sec (saxpy method)
tri+prep time:         0.183608 sec (incl time to compute L)
compute C time:        0.175610 sec
reduce (C) time:       0.000518 sec
rate      54.41 million edges/sec (incl time for L=tril(A))
rate      56.72 million edges/sec (just tricount itself)

